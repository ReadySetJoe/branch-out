{"version":3,"sources":["images/sk-badge-white.svg","Player.js","Modal.js","App.js","serviceWorker.js","index.js"],"names":["Player","props","backgroundStyles","backgroundImage","item","album","images","url","progressBarStyles","width","progress_ms","duration_ms","className","alt","src","name","artists","is_playing","style","UserModal","branches","this","forEach","branch","limbs","i","length","l","j","id","push","map","Card","cover","icon","faPagelines","Body","Title","title","ListGroup","ListGroupItem","limb","href","song_url","artist_name","target","rel","event_uri","venue_name","onClick","handleLimbDelete","Button","handleBranchDelete","size","show","onHide","handleClose","Header","closeButton","first_name","Footer","variant","React","Component","axios","defaults","xsrfCookieName","xsrfHeaderName","spotifyApi","SpotifyWebApi","SK_AUTH_KEY","App","state","token","uid","intervalID","root_artists","root_artists_selected","use_now_playing","use_top_artists","root_artists_selection_complete","genre_set","Set","navigator_has_geolocation","geolocation_started","geolocation_complete","latitude","longitude","city","region","country_code","artists_all","events_all","events_artists","events","matches","no_limb_error_show","branch_name","preview","image","playlist_id","playlist_uri","limbs_user","branches_user","show_modal","myRef","createRef","getNowPlaying","bind","useTopArtists","useNowPlaying","selectArtist","useMyLocation","findEvents","handleImageChange","handleChange","makeLimbs","makeBranch","handleLimbDeleteModal","save","load","NAME_ADJ","NAME_NOUN","BRANCH_ADJ_1","Math","floor","random","BRANCH_ADJ_2","BRANCH_NOUN","setState","toLowerCase","navigator","get","then","res","console","log","setAccessToken","data","extra_data","access_token","user","catch","err","clearInterval","getMyCurrentPlaybackState","error","getArtistRelatedArtists","getArtist","unshift","getMyTopArtists","items","artist","includes","_selected","splice","indexOf","root_artists_selected_ids","getArtists","concat","new_genre_set","genres","values","Array","from","flat","finally","e","preventDefault","self","geolocation","getCurrentPosition","position","coords","error_message","method","resultsPage","results","event","performance","totalEntries","total_entries","per_page","perPage","ceil","num_calls","unique_names","a","b","k","c","displayName","getArtistTopTracks","song","tracks","Object","keys","unfollowPlaylist","delete","ndx","user_id","song_uris","uri","createPlaylist","description","branch_data","FormData","append","artist_url","artist_id","event_id","event_name","event_city","location","event_date","start","date","venue","venue_id","venue_url","song_name","song_preview_url","preview_url","JSON","stringify","config","headers","addTracksToPlaylist","value","file","files","reader","FileReader","onloadend","result","readAsDataURL","use_latlong","use_zipcode","zipcode","localStorage","setItem","parse","getItem","replace","slice","limbs_table","type","faSync","findArtists","Alert","onClose","dismissible","Heading","onSubmit","current","click","ref","onChange","faGithub","faLinkedin","faSpotify","skBadgeWhite","faFontAwesome","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b504caa9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sk-badge-white.a33d170e.svg\";","import React from \"react\";\nimport \"./Player.css\";\nconst Player = props => {\n  const backgroundStyles = {\n    backgroundImage:`url(${props.item.album.images[0].url})`,\n  };\n  \n  const progressBarStyles = {\n    width: (props.progress_ms * 100 / props.item.duration_ms) + '%'\n  };\n  \n  return (\n    <div className=\"App w-100\">\n      <div className=\"main-wrapper\">\n        <div className=\"now-playing__img\">\n          <img alt=\"This should be the album art for the current playback\" src={props.item.album.images[0].url} />\n        </div>\n        <div className=\"now-playing__side\">\n          <div className=\"now-playing__name\">\n            {props.item.name}\n          </div>\n          <div className=\"now-playing__artist\">\n            {props.item.artists[0].name}\n          </div>\n          <div className=\"now-playing__status\">\n            {props.is_playing ? \"Playing\" : \"Paused\"}\n          </div>\n          <div className=\"progress\">\n            <div\n              className=\"progress__bar\"\n              style={progressBarStyles}\n            />\n          </div>\n        </div>\n        <div className=\"background\" style={backgroundStyles} />{\" \"}\n      </div>\n    </div>\n  );\n}\nexport default Player;","import React from 'react';\nimport './Modal.css'\n\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport ListGroupItem from 'react-bootstrap/ListGroupItem'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPagelines } from '@fortawesome/free-brands-svg-icons';\n\n// import pagelines_brands from './pagelines-brands.svg';\n\n\nclass UserModal extends React.Component {\n  render() {\n\n    // Reassociate limbs with their branches\n    let branches = [...this.props.branches]\n    branches.forEach(branch => { branch.limbs = [] });\n\n    for (let i = 0; i < this.props.limbs.length; i++) {\n      let l = this.props.limbs[i];\n      for (let j = 0; j < branches.length; j++) {\n        if (l.branch.id === branches[j].id) {\n          branches[j].limbs.push(l)\n        }\n      }\n    }\n    // console.log(this.props.limbs)\n    // console.log(branches)\n\n    branches = branches.map((branch, id) =>\n      <Card key={id} className=\"m-2\">\n        {branch.cover ? (\n          <div className=\"branch-img\" style={{ backgroundImage: 'url(' + branch.cover + ')' }} />\n        ) : (\n            <FontAwesomeIcon icon={faPagelines} className='default-branch-svg fa-7x' />\n          )}\n        <Card.Body>\n          <Card.Title><h3 className=\"m-0\">{branch.title}</h3></Card.Title>\n        </Card.Body>\n        <Card.Body className=\"py-0\">\n          <ListGroup className=\"list-group-flush\">\n            <ListGroupItem className=\"limb p-0 d-flex justify-content-between\">\n              <div className=\"text-left font-weight-bolder\">Artist</div>\n              <div className=\"text-right font-weight-bolder\">Venue/Tickets</div>\n            </ListGroupItem>\n            {branch.limbs.length === 0 ? (<h5>No branch limbs found :( Either this branch has no limbs, and can be deleted, or try reloading the page to see the newest entries!</h5>) : (\n              branch.limbs.map((limb, id) =>\n                <ListGroupItem key={id} className=\"limb p-0 d-flex justify-content-between align-text-center\">\n                  {/* <div className=\"\"> */}\n                  {/* <div>{id + 1}</div> */}\n                  <div className=\"text-left\"><a href={limb.song_url}>{limb.artist_name}</a></div>\n                  <div className=\"text-right\"><a target=\"_blank\" rel=\"noopener noreferrer\" href={limb.event_uri}>{limb.venue_name}</a></div>\n                  <button className=\"btn-delete\" onClick={() => { this.props.handleLimbDelete(limb); }}>x</button>\n                  {/* </div> */}\n                </ListGroupItem>\n              )\n            )}\n          </ListGroup>\n        </Card.Body>\n        {/* <Card.Body> */}\n        <Button className=\"mt-0 mb-2 mx-auto\" onClick={() => this.props.handleBranchDelete(branch)}>Delete Branch</Button>\n        {/* </Card.Body> */}\n\n      </Card>)\n\n    // console.log(this.props.branches)\n    return (\n      <Modal className=\"main\" size=\"lg\" show={this.props.show} onHide={this.props.handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{`${this.props.first_name}'s`} Branches</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"d-flex flex-wrap align-items-baseline justify-content-around\">\n            {(branches.length !== 0) ? (branches) : <h3>No branches found!</h3>}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default UserModal","import React from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\nimport { faPagelines, faGithub, faLinkedin, faFontAwesome, faSpotify } from '@fortawesome/free-brands-svg-icons';\nimport Alert from 'react-bootstrap/Alert';\nimport skBadgeWhite from './images/sk-badge-white.svg';\n// import poweredBySongkickWhite from './images/powered-by-songkick-White.svg';\n\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from \"./Player\";\nimport Modal from \"./Modal\";\nimport './App.css';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst spotifyApi = new SpotifyWebApi();\nconst SPOTIFY_API_INTERVAL_SECS = 3;\nconst SPOTIFY_INTERVAL_LIMITER = true;\n\nconst SK_AUTH_KEY = 'io09K9l3ebJxmxe2'\n\n// Debug Variables\nconst API_LIMITER = true; // API Limiter (debug boolean ensuring limited API calling)\nconst SAVE_TO_LOCAL_STORAGE = false;\nconst HEROKU_IP_DISABLE = true;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: null,\n      first_name: '',\n      uid: '',\n      id: '',\n\n      // Now Playing\n      item: {\n        album: {\n          images: [{ url: \"\" }]\n        },\n        name: \"\",\n        artists: [{ name: \"\", id: \"\" }],\n        duration_ms: 0,\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0,\n      intervalID: 0,\n\n      // Artist Selection\n      root_artists: [],\n      root_artists_selected: [],\n      use_now_playing: false,\n      use_top_artists: false,\n      root_artists_selection_complete: false,\n      genre_set: new Set(),\n\n      // Location\n      navigator_has_geolocation: false,\n      geolocation_started: false,\n      geolocation_complete: false,\n      latitude: 0,\n      longitude: 0,\n      city: '',\n      region: '',\n      country_code: '',\n\n      // Artists\n      artists_all: [],\n      artists: [],\n      // Events\n      events_all: [],\n      events_artists: [],\n      events: [],\n      // Matches\n      matches: [],\n\n      // Limbs\n      limbs: [],\n\n      no_limb_error_show: false,\n\n      // Branch\n      branch_name: '',\n      branch: [],\n      preview: \"\",\n      image: null,\n      playlist_id: \"\",\n      playlist_uri: '',\n\n      // Database\n      limbs_user: [],\n      branches_user: [],\n      show_modal: false,\n    };\n    this.myRef = React.createRef();\n\n    this.getNowPlaying = this.getNowPlaying.bind(this);\n    this.useTopArtists = this.useTopArtists.bind(this);\n    this.useNowPlaying = this.useNowPlaying.bind(this);\n    this.selectArtist = this.selectArtist.bind(this);\n    this.useMyLocation = this.useMyLocation.bind(this);\n    this.findEvents = this.findEvents.bind(this);\n    this.handleImageChange = this.handleImageChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.makeLimbs = this.makeLimbs.bind(this);\n    this.makeBranch = this.makeBranch.bind(this);\n    this.handleLimbDelete = this.handleLimbDelete.bind(this);\n    this.handleLimbDeleteModal = this.handleLimbDeleteModal.bind(this);\n    this.handleBranchDelete = this.handleBranchDelete.bind(this);\n    this.save = this.save.bind(this);\n    this.load = this.load.bind(this);\n  }\n\n  componentDidMount() {\n    // Generates random branch name\n    const NAME_ADJ = ['accessible', 'accomplished', 'ambitious', 'assured', 'bangin', 'beautiful', 'blissful', 'bold', 'breathtaking', 'brilliant', 'catchy', 'cerebral', 'classic', 'clean', 'clever', 'cleverly-written', 'cohesive', 'complex', 'conceptual', 'danceable', 'definitive', 'deftly-produced', 'delightful', 'dynamic', 'ebullient', 'eclectic', 'ecstatic', 'effortless', 'emotionally-rich', 'endlessly-playable', 'enigmatic', 'enterntaining', 'epic', 'ethereal', 'exceptional', 'exhilarating', 'expansive', 'notable', 'nuanced', 'number', 'operatic', 'passionate', 'percussion-saoked', 'perfect', 'piercing', 'playful', 'poetic', 'poignant', 'polished', 'primal', 'progressive', 'radical', 'raw', 'refined', 'refrain', 'relentless', 'reliably-solid', 'reverbed', 'rhythimic', 'riotous', 'riveting', 'rollicking', 'satisfying', 'saturated', 'sculptural', 'seductive', 'sensitive', 'skilled', 'skillful', 'soaring', 'solid', 'sombre', 'sonic', 'sophisticated', 'feel-good', 'finely-calibrated', 'flawless', 'fluid', 'focused', 'fresh', 'funky', 'grandiose', 'groundbreaking', 'harmonic', 'harmonically-rich', 'headbanging', 'heartfelt', 'hi-fi', 'highly-listenable', 'highly-recommended', 'hypnotic', 'indulgent', 'innocent', 'instrospective', 'instrumental', 'intoxicating', 'inventice', 'invigorating', 'inviting', 'latest', 'layered', 'limitless', 'listenable', 'lush', 'lyrical', 'masterful', 'mesmerizing', 'midtempo', 'moody', 'musical', 'mythical', 'sprawling', 'staccato', 'stratospheric', 'strident', 'striking', 'studied', 'stunning', 'stylish', 'stylistic', 'sublime', 'successful', 'surprising', 'symphonic', 'synthetic', 'talented', 'tender', 'textured', 'thrilling', 'throbbing', 'thunderous', 'tight', 'timeless', 'top-flight', 'trademark', 'trailblazing', 'transcendent', 'transporting', 'unexpected', 'unfied', 'unique', 'unpredictable', 'unsung', 'upbeat', 'visionary', 'vocal', 'well-rounded', 'well-tooled',]\n    const NAME_NOUN = ['Alder', 'Apple', 'Ash', 'Aspen', 'Basswood', 'Birch', 'Buckeye', 'Buckthorn', 'California-laurel', 'Catalpa', 'Cedar', 'Cherry', 'Chestnut', 'Chinkapin', 'Cottonwood', 'Cypress', 'Dogwood', 'Douglas-fir', 'Elm', 'Filbert', 'Fir', 'Giant', 'Hawthorn', 'Hazel', 'Hemlock', 'Holly', 'Honeylocust', 'Horsechestnut', 'Incense-cedar', 'Juniper', 'Larch', 'Locust', 'Madrone', 'Maple', 'Mountain-ash', 'Mountain-mahogany', 'Oak', 'Oregon-myrtle', 'Pear', 'Pine', 'Plum', 'Poplar', 'Redcedar', 'Arborvitae', 'Redwood', 'Russian-olive', 'Spruce', 'Sweetgum', 'Sycamore', 'Tanoak', 'Walnut', 'White-cedar', 'Willow', 'Yellow-poplar', 'Yew',]\n\n    const BRANCH_ADJ_1 = NAME_ADJ[Math.floor(Math.random() * NAME_ADJ.length)];\n    const BRANCH_ADJ_2 = NAME_ADJ[Math.floor(Math.random() * NAME_ADJ.length)];\n    const BRANCH_NOUN = NAME_NOUN[Math.floor(Math.random() * NAME_NOUN.length)];\n\n    this.setState({ branch_name: `${BRANCH_ADJ_1.toLowerCase()}-${BRANCH_ADJ_2.toLowerCase()}-${BRANCH_NOUN.toLowerCase()}` })\n\n    // Setting interval for automated getNowPlaying() calls\n    if (!SPOTIFY_INTERVAL_LIMITER) {\n      let intervalID = setInterval(() => this.getNowPlaying(), SPOTIFY_API_INTERVAL_SECS * 1000);\n      this.setState({ intervalID: intervalID })\n    }\n\n    // Check for Geolocation in Navigator\n    this.setState({ navigator_has_geolocation: \"geolocation\" in navigator })\n\n    if (!HEROKU_IP_DISABLE) {\n      // Get IP Location (not perfectly accurate but quick and easy)\n      axios.get('http://ip-api.com/json')\n        .then((res) => {\n          console.log('IP lookup', res);\n          this.setState({\n            latitude: res.data.lat,\n            longitude: res.data.lon,\n            city: res.data.city,\n            region: res.data.region,\n            country_code: res.data.countryCode,\n          })\n          this.findEvents()\n        })\n        .catch(err => console.log(err))\n    }\n\n    // Reloads user, based on token stored in state\n    if (!this.state.token) {\n      axios.get(`/api/v1/user-social-auth/`)\n        .then(res => {\n          console.log('Check for login:', res)\n          spotifyApi.setAccessToken(res.data[0].extra_data.access_token)\n          this.getNowPlaying()\n          this.setState({\n            token: res.data[0].extra_data.access_token,\n            first_name: res.data[0].user.first_name,\n            uid: res.data[0].uid,\n            id: res.data[0].id,\n          });\n          axios.get(`/api/v1/branches/`)\n            .then(res => { console.log('User Branches:', res); this.setState({ branches_user: res.data }); })\n            .catch(err => console.log(err))\n          axios.get(`/api/v1/limbs/`)\n            .then(res => { console.log('User Limbs:', res); this.setState({ limbs_user: res.data }); })\n            .catch(err => { console.log(err) })\n        })\n        .catch(err => { console.log(err) })\n    } else {\n      this.getNowPlaying()\n    }\n  }\n\n  componentWillUnmount() {\n    // use intervalID from the state to clear the interval\n    clearInterval(this.state.intervalID);\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState()\n      .then(data => {\n        if (data) {\n          this.setState({\n            item: data.item,\n            is_playing: data.is_playing,\n            progress_ms: data.progress_ms,\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          item: {\n            album: {\n              images: [{ url: \"\" }]\n            },\n            name: \"\",\n            artists: [{ name: \"\", id: \"\" }],\n            duration_ms: 0,\n          },\n          is_playing: \"Spotify Not Currently in use\",\n          progress_ms: 0,\n        });\n      })\n\n\n  }\n\n  useNowPlaying() {\n    spotifyApi.getArtistRelatedArtists(this.state.item.artists[0].id)\n      .then(res => {\n        console.log('Artists Related to Now Playing:', res)\n        let root_artists = res.artists\n        spotifyApi.getArtist(this.state.item.artists[0].id)\n          .then(res => {\n            console.log('Also, Now Playing Artist:', res)\n            root_artists.unshift(res)\n            this.setState({\n              root_artists: root_artists,\n              use_now_playing: true,\n              use_top_artists: false,\n              genre_set: new Set(),\n            })\n          })\n          .catch(err => console.log(err))\n      })\n      .catch(err => console.log(err))\n  }\n\n  useTopArtists() {\n    spotifyApi.getMyTopArtists()\n      .then(data => {\n        console.log('Top Artists: ', data)\n        this.setState({\n          root_artists: data.items,\n          use_top_artists: true,\n          use_now_playing: false,\n          genre_set: new Set(),\n        })\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  selectArtist(artist) {\n    // Handles selected root artist toggling\n    if (!this.state.root_artists_selected.includes(artist)) {\n      let _selected = [...this.state.root_artists_selected]\n      _selected.push(artist)\n      this.setState({ root_artists_selected: _selected })\n    } else {\n      let _selected = [...this.state.root_artists_selected]\n      _selected.splice(_selected.indexOf(artist), 1)\n      this.setState({ root_artists_selected: _selected })\n    }\n  }\n\n  findArtists() {\n    let root_artists_selected_ids = []\n    for (let i = 0; i < this.state.root_artists_selected.length; i++) {\n      root_artists_selected_ids.push(this.state.root_artists_selected[i].id)\n    }\n\n    spotifyApi.getArtists(root_artists_selected_ids)\n      .then(res => {\n        console.log('Selected Artist:', res)\n        let artists_all = [...this.state.artists_all]\n        artists_all = artists_all.concat(res.artists)\n\n        let new_genre_set = res.artists.map(artist => (artist.genres)).values()\n        new_genre_set = new Set(Array.from(new_genre_set).flat())\n        let genre_set = new Set([...this.state.genre_set, ...new_genre_set])\n\n        this.setState({ artists_all: artists_all, genre_set: genre_set })\n      })\n\n    for (let i = 0; i < this.state.root_artists_selected.length; i++) {\n      spotifyApi.getArtistRelatedArtists(this.state.root_artists_selected[i].id)\n        // eslint-disable-next-line no-loop-func\n        .then(res => {\n          console.log('Related to Selected Artist:', res)\n          let artists_all = [...this.state.artists_all]\n          artists_all = artists_all.concat(res.artists)\n\n          let new_genre_set = res.artists.map(artist => (artist.genres)).values()\n          new_genre_set = new Set(Array.from(new_genre_set).flat())\n          let genre_set = new Set([...this.state.genre_set, ...new_genre_set])\n\n          this.setState({ artists_all: artists_all, genre_set: genre_set })\n        })\n        .catch(err => {\n          console.log(err)\n        })\n        .finally(() => {\n          if (i === this.state.root_artists_selected.length - 1) { // last pull\n            console.log(`# of artists found: ${this.state.artists_all.length}`)\n            console.log('# of genres found: ', this.state.genre_set.size)\n            console.log('genres found: ', this.state.genre_set)\n          }\n        })\n    }\n  }\n\n  useMyLocation(e) {\n    e.preventDefault()\n    this.setState({ geolocation_started: true })\n    let self = this;\n    navigator.geolocation.getCurrentPosition(\n      function success(position) {\n        self.setState({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n          geolocation_complete: true,\n          events_all: [],\n        });\n        self.findEvents();\n      },\n      function error(error_message) {\n        console.error('An error has occured while retrieving location', error_message)\n      }\n    )\n  }\n\n  findEvents() {\n    axios({\n      method: 'get',\n      url: `https://api.songkick.com/api/3.0/events.json?apikey=${SK_AUTH_KEY}&location=geo:${this.state.latitude},${this.state.longitude}&page=1`,\n    })\n      .then(res => {\n        this.setState({ events_all: res.data.resultsPage.results.event })\n        let i;\n        let events_artists = [...this.state.events_artists];\n        for (i = 0; i < this.state.events_all.length; i++) {\n          let e = this.state.events_all[i];\n          let j\n          for (j = 0; j < e.performance.length; j++) {\n            events_artists.push(e.performance[j].artist)\n          }\n        }\n        this.setState({ events_artists: events_artists })\n\n\n        // If more than 50 events are available, and the first page didn't contain them all\n        if (res.data.resultsPage.totalEntries > res.data.resultsPage.results.event.length & !API_LIMITER) {\n          const total_entries = res.data.resultsPage.totalEntries\n          const per_page = res.data.resultsPage.perPage\n          console.log(`There are ${total_entries} results and ${per_page} on each page`)\n          console.log(`Which means the site needs to make ${Math.ceil(total_entries / per_page)} calls total`)\n          console.log(`and the last call should have ${total_entries % per_page} entries`)\n          const num_calls = Math.ceil(total_entries / per_page)\n          for (let i = 1; i < num_calls; i++) {\n            // Call the next page\n            axios({\n              method: 'get',\n              url: `https://api.songkick.com/api/3.0/events.json?apikey=${SK_AUTH_KEY}&location=geo:${this.state.latitude},${this.state.longitude}&page=${i + 1}`,\n              // eslint-disable-next-line no-loop-func\n            })\n              .then(res => {\n                // Add the events to state\n                let events_all = [...this.state.events_all]\n                events_all = events_all.concat(res.data.resultsPage.results.event)\n                this.setState({ events_all: events_all })\n\n                // Add all artists to state (COULD BE REFACTORED WITH MAP)\n                let events_artists = [...this.state.events_artists];\n                for (let i = 0; i < this.state.events_all.length; i++) {\n                  let e = this.state.events_all[i];\n                  for (let j = 0; j < e.performance.length; j++) {\n                    if (!events_artists.includes(e.performance[j].artist)) {\n                      events_artists.push(e.performance[j].artist)\n                    }\n                  }\n                }\n                this.setState({ events_artists: events_artists })\n              })\n              .catch(err => console.log(err))\n              .finally(() => {\n                if (i === num_calls - 1) {\n                  console.log('Events Found:', this.state.events_all)\n                  console.log('Performing Artists Found:', this.state.events_artists)\n                }\n              })\n          }\n        }\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => {\n        if (API_LIMITER) {\n          console.log('Events Found:', this.state.events_all)\n          console.log('Performing Artists Found:', this.state.events_artists)\n        }\n      })\n  }\n\n  makeLimbs() {\n    this.setState({ limbs: [] })\n    let events_all = [...this.state.events_all]\n    let artists_all = [...this.state.artists_all]\n    let unique_names = []\n    for (let i = 0; i < artists_all.length; i++) {\n      let a = artists_all[i];\n      for (let j = 0; j < events_all.length; j++) {\n        let b = events_all[j];\n        for (let k = 0; k < b.performance.length; k++) {\n          let c = b.performance[k];\n          if (a.name === c.artist.displayName && !unique_names.includes(a.name)) {\n            unique_names.push(a.name)\n            spotifyApi.getArtistTopTracks(a.id, \"ES\")\n              // eslint-disable-next-line no-loop-func\n              .then(res => {\n                // console.log(a, res.tracks[0], b)\n                let limbs = [...this.state.limbs]\n                let limb = { artist: a, song: res.tracks[0], event: b }\n                if (!limbs.includes(limb)) {\n                  limbs.push(limb)\n                  this.setState({ limbs: limbs })\n                }\n              })\n              .catch(err => console.log(err))\n          }\n        }\n      }\n    }\n    console.log('This should be empty', unique_names)\n    if (unique_names.length === 0) {\n      console.log('this should show')\n      this.setState({ no_limb_error_show: true })\n    }\n  }\n\n  handleBranchDelete(branch) {\n    if (Object.keys(branch).includes('playlist_id')) {\n      spotifyApi.unfollowPlaylist(branch.playlist_id)\n        .then(res => console.log(res))\n        .catch(err => console.log(err))\n    }\n    axios.delete(`/api/v1/branch/${branch.id}/`)\n      .then(res => {\n        let branches_user = [...this.state.branches_user]\n        let ndx = branches_user.indexOf(branch)\n        branches_user.splice(ndx, 1)\n        this.setState({ branches_user })\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  handleLimbDelete(limb) {\n    let limbs = [...this.state.limbs]\n    let ndx = limbs.indexOf(limb)\n    limbs.splice(ndx, 1)\n    this.setState({ limbs })\n    axios.delete(`/api/v1/limb/${limb.id}/`)\n      .then(res => { console.log(res) })\n      .catch(error => { console.log(error) })\n  }\n\n  handleLimbDeleteModal(limb) {\n    let limbs_user = [...this.state.limbs_user]\n    let ndx = limbs_user.indexOf(limb)\n    limbs_user.splice(ndx, 1)\n    this.setState({ limbs_user })\n    axios.delete(`/api/v1/limb/${limb.id}/`)\n      .then(res => { console.log(res) })\n      .catch(error => { console.log(error) })\n  }\n\n  makeBranch(e) {\n    e.preventDefault()\n    let user_id = this.state.uid\n    let name = this.state.branch_name\n    let song_uris = []\n    for (let i = 0; i < this.state.limbs.length; i++) {\n      song_uris.push(this.state.limbs[i].song.uri)\n    }\n\n    spotifyApi.createPlaylist(user_id,\n      {\n        name: name,\n        description: \"a playlist of upcoming events generated by branch.out\",\n      }\n    )\n      .then(res => {\n        console.log('Create Playlist Response:', res);\n        let branches_user = [...this.state.branches_user]\n        branches_user.push(\n          {\n            cover: this.state.preview,\n            title: this.state.branch_name,\n            limbs: this.state.branch,\n            playlist_id: res.id,\n            playlist_uri: res.uri,\n          }\n        )\n        this.setState({\n          branches_user: branches_user,\n          playlist_id: res.id,\n          playlist_uri: res.uri,\n        })\n\n        let branch_data = new FormData();\n        branch_data.append('title', this.state.branch_name)\n        branch_data.append('playlist_id', res.id)\n        branch_data.append('playlist_uri', res.uri)\n        if (this.state.image) { branch_data.append('cover', this.state.image) }\n        let limbs = []\n        for (let i = 0; i < this.state.limbs.length; i++) {\n          let limb = {\n            artist_url: this.state.limbs[i].artist.uri,\n            artist_id: this.state.limbs[i].artist.id,\n            artist_name: this.state.limbs[i].artist.name,\n            event_id: this.state.limbs[i].event.id,\n            event_uri: this.state.limbs[i].event.uri,\n            event_name: this.state.limbs[i].event.displayName,\n            event_city: this.state.limbs[i].event.location.city,\n            event_date: this.state.limbs[i].event.start.date,\n            venue_name: this.state.limbs[i].event.venue.displayName,\n            venue_id: this.state.limbs[i].event.venue.id,\n            venue_url: this.state.limbs[i].event.venue.uri,\n            song_url: this.state.limbs[i].song.uri,\n            song_name: this.state.limbs[i].song.name,\n            song_preview_url: this.state.limbs[i].song.preview_url,\n          }\n          limbs.push(limb)\n        }\n        limbs = JSON.stringify(limbs)\n\n        branch_data.append('limbs', limbs)\n\n        axios({\n          method: 'post',\n          url: '/api/v1/branch/',\n          data: branch_data,\n          config: {\n            headers: { 'Content-Type': 'multipart/form-data' }\n          }\n        })\n          .then(res => console.log(res))\n          .catch(err => console.log(err))\n        spotifyApi.addTracksToPlaylist(res.id, song_uris)\n          .then(res => console.log('Add tracks to playlist:', res))\n          .catch(err => console.log(err))\n      })\n      .catch(err => console.log(err))\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleImageChange(e) {\n    let file = e.target.files[0];\n    // console.log(file)\n    this.setState({ image: file });\n\n    let reader = new FileReader();\n    reader.onloadend = () => {\n      this.setState({ preview: reader.result })\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  save() {\n    let state = {}\n    state.token = this.state.token;\n    state.artists = this.state.artists;\n    state.artists_all = this.state.artists_all;\n    state.events = this.state.events;\n    state.events_all = this.state.events_all;\n    state.events_artists = this.state.events_artists;\n    state.is_playing = this.state.is_playing;\n    state.item = this.state.item;\n    state.latitude = this.state.latitude;\n    state.limbs = this.state.limbs;\n    state.longitude = this.state.longitude;\n    state.matches = this.state.matches;\n    state.progress_ms = this.state.progress_ms;\n    state.root_artists = this.state.root_artists;\n    state.root_artists_selected = this.state.root_artists_selected;\n    state.root_artists_selection_complete = this.state.root_artists_selection_complete;\n    state.use_latlong = this.state.use_latlong;\n    state.use_now_playing = this.state.use_now_playing;\n    state.use_top_artists = this.state.use_top_artists;\n    state.use_zipcode = this.state.use_zipcode;\n    state.first_name = this.state.first_name;\n    state.zipcode = this.state.zipcode;\n    state.uid = this.state.uid;\n    state.id = this.state.id;\n    state.show_modal = this.state.show_modal;\n    state.genre_set = this.state.genre_set;\n    state.no_limb_error_show = this.state.no_limb_error_show;\n    localStorage.setItem('state', JSON.stringify(state))\n    console.log('State Saved!')\n    console.log(state)\n  }\n\n  load() {\n    let state = JSON.parse(localStorage.getItem('state'))\n    this.setState(state)\n    console.log('State Loaded!')\n    console.log(state)\n  }\n\n  render() {\n    let root_artists = this.state.root_artists.map((artist, id) =>\n      <button key={id}\n        className={`btn root-artist-btn ${this.state.root_artists_selected.includes(artist) ? ('btn-selected') : ('')}`}\n        onClick={() => this.selectArtist(artist)}\n      >\n        <img className=\"root-artist-img\" src={artist.images[0].url} alt={`profile for ${artist.name}`}></img>\n        {artist.name}\n      </button>\n    )\n\n    let limbs = this.state.limbs.map((limb, id) =>\n      <div key={id} className=\"limb d-flex align-text-center\">\n        <div className=\"d-none d-md-flex\">{id + 1}</div>\n        <div className=\"col-4 col-lg-3 text-left\"><a href={limb.artist.uri}>{limb.artist.name}</a></div>\n        <div className=\"col-lg-3 text-left d-none d-lg-flex\"><a href={limb.song.uri}>{limb.song.name}</a></div>\n        <div className=\"col-6 col-lg-2 venue-wrap\"><a target=\"_blank\" rel=\"noopener noreferrer\" href={limb.event.venue.uri}>{limb.event.venue.displayName}</a></div>\n        <div className=\"col-lg-1 d-none d-lg-flex\"><a target=\"_blank\" rel=\"noopener noreferrer\" href={limb.event.uri}>get tix</a></div>\n        <div className=\"col-lg-2 d-none d-lg-flex\">{limb.event.location.city.replace(\", US\", \"\")}</div>\n        <div>{limb.event.start.date.slice(5, limb.event.start.date.length)}</div>\n        <button className=\"btn-delete\" onClick={() => this.handleLimbDelete(limb)}>x</button>\n      </div>\n    )\n\n    let limbs_table =\n      <div className=\"limbs\">\n        <div className=\"limb font-weight-bolder\">\n          <div className=\"d-none d-md-flex\">#</div>\n          <div className=\"col-4 col-lg-3 text-left\">Artist</div>\n          <div className=\"col-lg-3 d-none d-lg-flex text-left\">Top Song</div>\n          <div className=\"col-6 col-lg-2\">Venue</div>\n          <div className=\"col-lg-1 d-none d-lg-flex\">Tickets</div>\n          <div className=\"col-lg-2 d-none d-lg-flex\">City</div>\n          <div>Date</div>\n        </div>\n        {limbs}\n      </div>\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {SAVE_TO_LOCAL_STORAGE && (\n            <div style={{ position: \"fixed\", bottom: 60, right: 5, }}>\n              <button className='btn' onClick={() => this.save()}>save</button>\n              <button className='btn' onClick={() => this.load()}>load</button>\n            </div>\n          )}\n\n          <Modal\n            show={this.state.show_modal}\n            branches={this.state.branches_user}\n            limbs={this.state.limbs_user}\n            handleClose={() => this.setState({ show_modal: false })}\n            handleBranchDelete={this.handleBranchDelete}\n            handleLimbDelete={this.handleLimbDeleteModal}\n            first_name={this.state.first_name}\n          />\n\n          <h1 className={`${this.state.token ? ('title d-none d-md-flex animate-md fadeOutLeftMD') : ('title title-login m-auto animate fadeInUp one')}`}>branch.out</h1>\n          {!this.state.token && (\n            <div className=\"d-flex flex-column align-items-center m-auto animate fadeInUp two\">\n              <FontAwesomeIcon className=\"my-2\" icon={faPagelines} />\n              <h3 className=\"welcome-line m-2\">Welcome to branch.out</h3>\n              <h3 className=\"welcome-line m-2\">A site that helps people find new music, coming to a nearby stage</h3>\n              <h3 className=\"welcome-line m-2\">Let's find the the next concert that you will never forget</h3>\n              <FontAwesomeIcon className=\"my-2\" icon={faPagelines} />\n              <a className=\"btn btn-login animate fadeInUp three my-3\" href=\"/social/login/spotify/\">Login to Spotify</a>\n            </div>\n          )}\n\n          <nav className=\"scrollspy-placeholder fixed-left\"><ul></ul></nav>\n          {this.state.token && (\n            <div>\n              <div className=\"top-bar fixed-top d-flex align-items-center justify-content-between p-2\">\n                <h4 className=\"\">Hey, {this.state.first_name}</h4>\n\n                <div className=\"top-right-btns\">\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.setState({ show_modal: true })}>\n                    My Branches ({this.state.branches_user.length})\n                  </button>\n                  <a href=\"/accounts/logout/\" className='btn-logout btn m-2'>Logout</a>\n                </div>\n\n              </div>\n            </div>\n          )}\n\n          {this.state.token && (\n            <div className=\"w-100\">\n              <section className='player-wrapper justify-content-center'>\n                {this.state.item.album.images[0].url ? (\n                  <Player\n                    item={this.state.item}\n                    is_playing={this.state.is_playing}\n                    progress_ms={this.state.progress_ms}\n                  />\n                ) : (\n                    <div>\n                      <h3>Let's get started.</h3>\n                      <div>To make sure your Spotify is connected, play a song (on your phone, or any device)</div>\n                    </div>\n                  )}\n                {SPOTIFY_INTERVAL_LIMITER && (<button className='btn p-1 refresh-btn' onClick={() => this.getNowPlaying()}><span className=\"p-1\"><FontAwesomeIcon icon={faSync} /></span></button>)}\n              </section>\n\n              <button className={`btn ${this.state.use_now_playing ? 'btn-selected' : ''} `} onClick={() => this.useNowPlaying()}>Use Related Artists</button>\n              <button className={`btn ${this.state.use_top_artists ? 'btn-selected' : ''} `} onClick={() => this.useTopArtists()}>Use Your Top Artists</button>\n            </div>\n          )}\n\n\n          <section className={`${this.state.use_now_playing || this.state.use_top_artists ? 'animate fadeInRight d-flex flex-column align-items-center' : 'd-none'} `}>\n            <h2 className=\"animate fade-in-right my-4 align-self-baseline \">Please select at least 3 root artists to continue:</h2>\n            <div className=\"d-sm-flex d-inline align-items-center\">\n              <div>\n                <button className='btn' onClick={() => this.setState({ root_artists_selected: this.state.root_artists })}>All</button>\n                <button className='btn' onClick={() => this.setState({ root_artists_selected: [] })}>None</button>\n              </div>\n\n              <div>{root_artists}</div>\n            </div>\n            <div>\n              <button\n                onClick={() => {\n                  if (this.state.root_artists_selected.length >= 3) {\n                    this.setState({ root_artists_selection_complete: true });\n                    this.findArtists();\n                  }\n                }}\n                className={`mt-5\n                ${this.state.root_artists_selected.length >= 3 ? 'btn' : 'btn btn-disabled'}\n                ${this.state.root_artists_selection_complete ? 'btn-selected' : ''}\n                `}\n              >Continue Using These Artists</button>\n            </div>\n          </section>\n\n          {this.state.root_artists_selection_complete && (\n            <section className='location d-flex justify-content-center animate fadeInLeft'>\n              {!HEROKU_IP_DISABLE && (<div className={`location-ip p-3 m-4 ${this.state.city !== '' ? ('') : ('d-none')}`}>\n                <h3 className=\"\">Based on your IP address, your location is:</h3>\n                <h2><i>{`${this.state.city}, ${this.state.region}, ${this.state.country_code}`}</i></h2>\n              </div>)}\n\n\n              <div className={`location-geo m-4 ${this.state.navigator_has_geolocation ? 'd-flex flex-column' : 'd-none'}`}>\n                {HEROKU_IP_DISABLE ? (\n                  <h4 className=\"m-4\">Let's figure out where to search for concerts! Click the button below:</h4>\n                ) : (\n                    <h4>Not your location? Click below for a better guess:</h4>\n                  )}\n                {!this.state.geolocation_complete ?\n                  (<button className=\"btn m-auto find-location-btn\" onClick={this.useMyLocation}>Find My Location\n                  {this.state.geolocation_started && !this.state.geolocation_complete && (<div className=\"loader\"></div>)}</button>)\n                  : (<button className=\"btn m-auto btn-selected\">Found!</button>)}\n\n              </div>\n              <div className={`location-zip m-4 ${!this.state.navigator_has_geolocation ? 'd-flex' : 'd-none'}`}>\n                <div>We're sorry, your browser doesn't support geolocation :(</div>\n                <div>Location by US zipcode is still currently in development</div>\n              </div>\n            </section>\n          )}\n\n          <div className={` ${this.state.root_artists_selection_complete && this.state.latitude !== 0 ? 'd-flex flex-column' : 'd-none'}`}>\n            <h4>Let's do the thing</h4>\n            <button className=\"btn m-auto\" onClick={() => { this.setState({ no_limb_error_show: false }); this.makeLimbs() }}>Grow New Branch</button>\n          </div>\n\n          {this.state.no_limb_error_show && (\n            <Alert className=\"animate fadeInUp m-2\" variant=\"danger\" onClose={() => this.setState({ no_limb_error_show: false })} dismissible>\n              <Alert.Heading>Uh oh! We couldn't find any matches :(</Alert.Heading>\n              <p>\n                Sorry, we weren't able to find any good suggestions with those inputs.\n                Try increasing the number of input artists, or using the artist you're\n                listening to currently to guide the results a bit. If nothing else,\n                check back another time, as we're still perfecting the searching process.\n              </p>\n            </Alert>\n          )}\n\n          {this.state.limbs.length > 0 && (\n            <section className=\"animate fadeInUp\">\n              <header>\n                <form onSubmit={this.makeBranch} className=\"new-branch-form m-2 d-flex flex-column flex-lg-row align-items-center justify-content-around\">\n                  <button type='button' icon=\"file\" onClick={() => this.myRef.current.click()} className=\"btn branch-img-preview-btn\">\n                    {this.state.image ? (\n                      <img className=\"branch-img-preview\" src={this.state.preview} alt='branch cover preview' width=\"200\" />\n                    ) : (\n                        <div>\n                          <FontAwesomeIcon icon={faPagelines} className=\"fa-7x\" />\n                          <br />\n                          <p>cover image upload</p>\n                        </div>\n                      )}\n                  </button>\n                  <input className=\"d-none\" ref={this.myRef} type='file' name='image' onChange={this.handleImageChange} />\n                  <div className=\"text-left\">\n                    <h3>Here's your new branch, let's give it a name:</h3>\n                    <input className=\"branch-name-input\" name=\"branch_name\" value={this.state.branch_name} onChange={this.handleChange} type=\"text\" />\n                  </div>\n                  <div>\n                    {/* <button className=\"btn\" type=\"submit\" value=\"save\">Add to My Branches</button> */}\n                    {this.state.playlist_id === \"\" ? (\n                      <button className=\"btn\" type=\"submit\" onClick={this.makeBranch}>Save branch &<br /> export to spotify</button>\n                    ) : (\n                        <a className=\"btn btn-selected\" href={this.state.playlist_uri}>View On Spotify</a>\n                      )}\n                  </div>\n                </form>\n              </header>\n              {limbs_table}\n              {/* <h5 className=\"text-left\">Some stats for this branch...</h5>\n              <div className=\"d-flex\">\n                <div className=\"d-flex flex-column text-left\">\n                  <h5># of events found: {this.state.events_all.length}</h5>\n                  <h5># of performing artists found: {this.state.events_artists.length}</h5>\n                  <h5># of related artists found: {this.state.artists_all.length}</h5>\n                  <h5># of genres found: {this.state.genre_set.size}</h5>\n                </div>\n\n              </div> */}\n            </section>)}\n\n          <footer className=\"bottom-bar fixed-bottom d-flex align-items-center justify-content-between p-2\">\n            <div className=\"ccs-thank-you mr-5 text-left d-md-inline d-none\">Created at <a href=\"https://carolinacodeschool.org/\">Carolina Code School</a><br />Presented Nov, 15th 2019</div>\n\n            <div className=\"created-by col-12 col-sm text-center text-sm-left text-md-center p-0\">branch.out was made by Joe Powers:\n              <a className=\"mx-1\" href=\"https://github.com/ReadySetJoe\"><FontAwesomeIcon icon={faGithub} /></a>\n              <a className=\"mx-1\" href=\"https://www.linkedin.com/in/joe-powers/\"><FontAwesomeIcon icon={faLinkedin} /></a>\n            </div>\n\n            <div className=\"citations ml-5 d-sm-flex d-none flex-row align-items-center\">\n              <span>API:</span>\n              <div className=\"citations-api text-left mx-2\">\n                <div className=\"citation-spotify\"><a href=\"https://developer.spotify.com/\">Spotify <FontAwesomeIcon icon={faSpotify} /></a></div>\n                <div className=\"citation-songkick\"><a href=\"https://www.songkick.com/developer\">Songkick <img className=\"songkick-badge-img\" alt=\"songkick badge\" src={skBadgeWhite} /></a></div>\n              </div>\n              Style:\n              <div className=\"citations-style text-left mx-2\">\n                <div className=\"citation-fontawesome\"><a href=\"https://fontawesome.com/\">Font Awesome <FontAwesomeIcon icon={faFontAwesome} /></a></div>\n                <div className=\"citation-style\"><a href=\"https://github.com/JoeKarlsson/react-spotify-player\">Joe Karlssons <FontAwesomeIcon icon={faGithub} /></a></div>\n              </div>\n            </div>\n\n          </footer>\n        </header>\n      </div >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}