{"version":3,"sources":["Player.js","App.js","serviceWorker.js","index.js"],"names":["Player","props","backgroundStyles","backgroundImage","item","album","images","url","progressBarStyles","width","progress_ms","duration_ms","className","alt","src","name","artists","is_playing","style","axios","defaults","xsrfCookieName","xsrfHeaderName","spotifyApi","SpotifyWebApi","App","state","token","username","id","root_artists","root_artists_selected","use_now_playing","use_top_artists","root_artists_selection_complete","latitude","longitude","zipcode","use_zipcode","use_latlong","artists_all","events_all","events_artists","events","matches","limbs","branches","getNowPlaying","bind","useTopArtists","useNowPlaying","selectArtist","useMyLocation","findEvents","addNowPlayingToList","save","load","this","get","then","res","console","log","_token","data","extra_data","access_token","setState","user","first_name","setAccessToken","catch","err","getMyCurrentPlaybackState","error","getArtistRelatedArtists","unshift","getMyTopArtists","items","formData","FormData","append","href","songs","length","localStorage","setItem","JSON","stringify","method","config","headers","artist","includes","_selected","splice","indexOf","push","e","preventDefault","self","navigator","geolocation","getCurrentPosition","position","coords","error_message","i","resultsPage","results","event","j","performance","totalEntries","total_entries","per_page","perPage","Math","ceil","num_calls","concat","events_artists_unique","Set","map","x","displayName","artists_all_unique","a","getArtistTopTracks","song","tracks","matches_also","k","sort","b","start","date","parse","getItem","key","onClick","limb","location","city","limbs_table","bottom","right","icon","faSync","type","findArtists","findMatches","makeLimbs","makeBranch","React","Component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cfe720ad.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Player.css\";\nconst Player = props => {\n  const backgroundStyles = {\n    backgroundImage:`url(${props.item.album.images[0].url})`,\n  };\n  \n  const progressBarStyles = {\n    width: (props.progress_ms * 100 / props.item.duration_ms) + '%'\n  };\n  \n  return (\n    <div className=\"App\">\n      <div className=\"main-wrapper\">\n        <div className=\"now-playing__img\">\n          <img alt=\"This should be the album art for the current playback\" src={props.item.album.images[0].url} />\n        </div>\n        <div className=\"now-playing__side\">\n          <div className=\"now-playing__name\">\n            {props.item.name}\n          </div>\n          <div className=\"now-playing__artist\">\n            {props.item.artists[0].name}\n          </div>\n          <div className=\"now-playing__status\">\n            {props.is_playing ? \"Playing\" : \"Paused\"}\n          </div>\n          <div className=\"progress\">\n            <div\n              className=\"progress__bar\"\n              style={progressBarStyles}\n            />\n          </div>\n        </div>\n        <div className=\"background\" style={backgroundStyles} />{\" \"}\n      </div>\n    </div>\n  );\n}\nexport default Player;","import React from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\n\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from \"./Player\";\nimport './App.css';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst spotifyApi = new SpotifyWebApi();\n\nconst SK_AUTH_KEY = 'io09K9l3ebJxmxe2'\n\n// Debug Variables\nconst API_LIMITER = false; // API Limiter (debug boolean ensuring limited API calling) \nconst SAVE_TO_LOCAL_STORAGE = true;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: null,\n      username: '',\n\n      // Now Playing\n      item: {\n        album: {\n          images: [{ url: \"\" }]\n        },\n        name: \"\",\n        artists: [{ name: \"\", id: \"\" }],\n        duration_ms: 0,\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0,\n\n      // Artist Selection\n      root_artists: [],\n      root_artists_selected: [],\n      use_now_playing: false,\n      use_top_artists: false,\n      root_artists_selection_complete: false,\n\n      // Location\n      latitude: 0,\n      longitude: 0,\n      zipcode: 0,\n      use_zipcode: false,\n      use_latlong: false,\n\n      // Artists\n      artists_all: [],\n      artists: [],\n      // Events\n      events_all: [],\n      events_artists: [],\n      events: [],\n      // Matches\n      matches: [],\n\n      // Limbs\n      limbs: [],\n\n      // Branches\n      branches: [],\n    };\n    this.getNowPlaying = this.getNowPlaying.bind(this);\n    this.useTopArtists = this.useTopArtists.bind(this);\n    this.useNowPlaying = this.useNowPlaying.bind(this);\n    this.selectArtist = this.selectArtist.bind(this);\n    this.useMyLocation = this.useMyLocation.bind(this);\n    this.findEvents = this.findEvents.bind(this);\n    this.addNowPlayingToList = this.addNowPlayingToList.bind(this);\n    this.save = this.save.bind(this);\n    this.load = this.load.bind(this);\n  }\n\n  componentDidMount() {\n    // Reloads user, based on token stored in state\n    if (!this.state.token) {\n      axios.get(`/api/v1/user-social-auth/`)\n        .then(res => {\n          console.log(res)\n          let _token = res.data[0].extra_data.access_token\n          this.setState({\n            token: _token,\n            username: res.data[0].user.first_name,\n          });\n          spotifyApi.setAccessToken(_token)\n          this.getNowPlaying()\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    } else {\n      this.getNowPlaying()\n    }\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState()\n      .then(data => {\n        if (data) {\n          this.setState({\n            item: data.item,\n            is_playing: data.is_playing,\n            progress_ms: data.progress_ms,\n            use_now_playing: false,\n          });\n        }\n        console.log(data)\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          item: {\n            album: {\n              images: [{ url: \"\" }]\n            },\n            name: \"\",\n            artists: [{ name: \"\", id: \"\" }],\n            duration_ms: 0,\n          },\n          is_playing: \"Spotify Not Currently in use\",\n          progress_ms: 0,\n        });\n      })\n  }\n\n  useNowPlaying() {\n    spotifyApi.getArtistRelatedArtists(this.state.item.artists[0].id)\n      .then(data => {\n        let root_artists = data.artists\n        root_artists.unshift(this.state.item.artists[0])  \n        this.setState({\n          root_artists: root_artists,\n          use_now_playing: true,\n          use_top_artists: false\n        })\n        console.log(data)\n      })\n      .catch(err => console.log(err))\n  }\n\n  useTopArtists() {\n    spotifyApi.getMyTopArtists()\n      .then(data => {\n        this.setState({\n          root_artists: data.items,\n          use_top_artists: true,\n          use_now_playing: false\n        })\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  addNowPlayingToList() {\n    let formData = new FormData();\n    formData.append('title', this.state.item.name);\n    formData.append('artist', this.state.item.artists[0].name);\n    formData.append('url', this.state.item.href);\n    formData.append('track_number', this.state.songs.length);\n    formData.append('duration_ms', this.state.item.duration_ms);\n    localStorage.setItem('formData', JSON.stringify(formData))\n    localStorage.setItem('state-addnowplaying', JSON.stringify(this.state))\n    console.log(formData)\n\n    axios({\n      method: 'post',\n      url: '/api/v1/songs/',\n      config: { headers: { 'content-type': 'multipart/form-data' } },\n      data: formData,\n    })\n      .then(() => {\n        console.log('Current song added to song list!')\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  selectArtist(artist) {\n    // Handles selected root artist toggling\n    if (!this.state.root_artists_selected.includes(artist)) {\n      let _selected = [...this.state.root_artists_selected]\n      _selected.push(artist)\n      this.setState({ root_artists_selected: _selected })\n    } else {\n      let _selected = [...this.state.root_artists_selected]\n      _selected.splice(_selected.indexOf(artist), 1)\n      this.setState({ root_artists_selected: _selected })\n    }\n  }\n\n  useMyLocation(e) {\n    e.preventDefault()\n    let self = this;\n    navigator.geolocation.getCurrentPosition(\n      function success(position) {\n        self.setState({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        })\n      },\n      function error(error_message) {\n        console.error('An error has occured while retrieving location', error_message)\n      }\n    )\n  }\n\n  findEvents() {\n    axios({\n      method: 'get',\n      url: `https://api.songkick.com/api/3.0/events.json?apikey=${SK_AUTH_KEY}&location=geo:${this.state.latitude},${this.state.longitude}&page=1`,\n    })\n      .then(res => {\n        this.setState({ events_all: res.data.resultsPage.results.event })\n        let i;\n        let events_artists = [...this.state.events_artists];\n        for (i = 0; i < this.state.events_all.length; i++) {\n          let e = this.state.events_all[i];\n          let j\n          for (j = 0; j < e.performance.length; j++) {\n            events_artists.push(e.performance[j].artist)\n          }\n        }\n        this.setState({ events_artists: events_artists })\n\n\n        // If more than 50 events are available, and the first page didn't contain them all\n        if (res.data.resultsPage.totalEntries > res.data.resultsPage.results.event.length & !API_LIMITER) {\n          const total_entries = res.data.resultsPage.totalEntries\n          const per_page = res.data.resultsPage.perPage\n          console.log(`There are ${total_entries} results and ${per_page} on each page`)\n          console.log(`Which means the site needs to make ${Math.ceil(total_entries / per_page)} calls total`)\n          console.log(`and the last call should have ${total_entries % per_page} entries`)\n          const num_calls = Math.ceil(total_entries / per_page)\n          let i\n          for (i = 1; i < num_calls; i++) {\n            // Call the next page\n            axios({\n              method: 'get',\n              url: `https://api.songkick.com/api/3.0/events.json?apikey=${SK_AUTH_KEY}&location=geo:${this.state.latitude},${this.state.longitude}&page=${i+1}`,\n              // eslint-disable-next-line no-loop-func\n            })\n            .then(res => {\n              // Add the events to state\n              let events_all = [...this.state.events_all]\n              events_all = events_all.concat(res.data.resultsPage.results.event)\n              this.setState({ events_all: events_all })\n\n              // Add all artists to state (COULD BE REFACTORED WITH MAP)\n              let i;\n              let events_artists = [...this.state.events_artists];\n              for (i = 0; i < this.state.events_all.length; i++) {\n                let e = this.state.events_all[i];\n                let j\n                for (j = 0; j < e.performance.length; j++) {\n                  events_artists.push(e.performance[j].artist)\n                }\n              }\n              console.log(events_all)\n              this.setState({ events_artists: events_artists })\n            })\n            .catch(err => {\n              console.log(err)\n            })\n          }\n        }\n        console.log({events_artists})\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  findArtists() {\n    let i;\n    for (i = 0; i < this.state.root_artists_selected.length; i++) {\n      spotifyApi.getArtistRelatedArtists(this.state.root_artists_selected[i].id)\n        // eslint-disable-next-line no-loop-func\n        .then(res => {\n          let artists_all = [...this.state.artists_all]\n          artists_all = artists_all.concat(res.artists)\n          this.setState({ artists_all: artists_all })\n          console.log(res)\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    }\n  }\n\n  findMatches() {\n    console.log(`There are ${this.state.events_artists.length} artists from events`)\n    let events_artists = [...this.state.events_artists];\n    const events_artists_unique = [...new Set(events_artists.map(x => x.displayName))];\n    console.log(`${events_artists_unique.length} are unique`)\n\n    console.log(`There are ${this.state.artists_all.length} artists from events`)\n    let artists_all = [...this.state.artists_all];\n    const artists_all_unique = [...new Set(artists_all.map(x => x.name))];\n    console.log(`${artists_all_unique.length} are unique`)\n\n    // this.setState({\n    //   events_artists: events_artists_unique,\n    //   artists_all: artists_all_unique\n    // })\n\n    let i, j, a, b, matches = [];\n    for (i = 0; i < artists_all_unique.length; i++) {\n      a = artists_all_unique[i];\n      for (j = 0; j < events_artists_unique.length; j++) {\n        b = events_artists_unique[j]\n        if (a === b) {\n          matches.push(a)\n        }\n      }\n    }\n    console.log(`and there are ${matches.length} matches`)\n    console.log(matches)\n    this.setState({ matches: matches })\n  }\n\n  makeLimbs() {\n    let j = 0;\n    let matches = [...this.state.matches]\n    let limbs = []\n\n    while (matches.length && j<this.state.artists_all.length) {\n      let a = this.state.artists_all[j]\n      if (matches.includes(a.name)) {\n        spotifyApi.getArtistTopTracks(a.id, \"ES\")\n        .then(res => {\n          limbs.push({artist: a, song: res.tracks[0]})\n          let i = 0;\n          let matches_also = [...this.state.matches]\n      \n          while (matches_also.length && i<this.state.events_all.length) {\n            let e = this.state.events_all[i]\n            for (let j=0; j<e.performance.length; j++) {\n              if (matches_also.includes(e.performance[j].artist.displayName)) {\n                for (let k=0; k<limbs.length; k++) {\n                  if (limbs[k].artist.name === e.performance[j].artist.displayName) {\n                    limbs[k].event = e\n                    limbs.sort((a, b) => b.start.date - a.start.date)\n                  }\n                }\n                matches_also.splice(matches_also.indexOf(e.performance[j].artist.displayName),1)\n              }\n            }\n            i++;\n          }\n      \n          console.log(limbs)\n          this.setState({limbs:limbs})\n        })\n        .catch(err => console.log(err))\n        matches.splice(matches.indexOf(a.name),1)\n      }\n      j++;\n    }\n  }\n\n  save() {\n    let state = {}\n    state.token = this.state.token;\n    state.artists = this.state.artists;\n    state.artists_all = this.state.artists_all;\n    state.events = this.state.events;\n    state.events_all = this.state.events_all;\n    state.events_artists = this.state.events_artists;\n    state.is_playing = this.state.is_playing;\n    state.item = this.state.item;\n    state.latitude = this.state.latitude;\n    state.limbs = this.state.limbs;\n    state.longitude = this.state.longitude;\n    state.matches = this.state.matches;\n    state.progress_ms = this.state.progress_ms;\n    state.root_artists = this.state.root_artists;\n    state.root_artists_selected = this.state.root_artists_selected;\n    state.root_artists_selection_complete = this.state.root_artists_selection_complete;\n    state.use_latlong = this.state.use_latlong;\n    state.use_now_playing = this.state.use_now_playing;\n    state.use_top_artists = this.state.use_top_artists;\n    state.use_zipcode = this.state.use_zipcode;\n    state.username = this.state.username;\n    state.zipcode = this.state.zipcode;\n    localStorage.setItem('state', JSON.stringify(state))\n    console.log('State Saved!')\n    console.log(state)\n  }\n\n  load() {\n    let state = JSON.parse(localStorage.getItem('state'))\n    this.setState(state)\n    console.log('State Loaded!')\n    console.log(state)\n  }\n\n  render() {\n    let root_artists = this.state.root_artists.map((artist, id) =>\n      <button key={id}\n        className={`btn root-artist-btn ${this.state.root_artists_selected.includes(artist) ? ('btn-selected') : ('')}`}\n        onClick={() => this.selectArtist(artist)}\n      >\n        {artist.name}\n      </button>\n    )\n\n    let limbs = this.state.limbs.map((limb, id) =>\n      // <div key={id} className=\"limb d-flex flex-row justify-content-around\">\n      <div key={id} className=\"limb d-flex\">\n        <div className=\"col-1\">{id+1}</div>\n        <div className=\"col-3 text-left\">{limb.artist.name}</div>\n        <div className=\"col-4 text-left\">{limb.song.name}</div>\n        <div className=\"col-2\">{limb.event.location.city}</div>\n        <div className=\"col-2\">{limb.event.start.date}</div>\n      </div>\n    )\n\n    let limbs_table = \n      <div className=\"limbs\">\n        <div className=\"limb font-weight-bolder\">\n          <div className=\"col-1\">#</div>\n          <div className=\"col-3 text-left\">Artist</div>\n          <div className=\"col-4 text-left\">Top Song</div>\n          <div className=\"col-2\">City</div>\n          <div className=\"col-2\">Date</div>\n        </div>\n        {limbs}\n      </div>\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {SAVE_TO_LOCAL_STORAGE && (\n            <div style={{ position: \"fixed\", bottom: 5, right: 5, }}>\n              <button className='btn' onClick={() => this.save()}>save</button>\n              <button className='btn' onClick={() => this.load()}>load</button>\n            </div>\n          )}\n          <h1 className=\"title\">branch.out</h1>\n          <nav className=\"scrollspy-placeholder fixed-left\"><ul></ul></nav>\n          {this.state.token && (\n            <div>\n              <div className=\"top-bar fixed-top d-flex align-items-center justify-content-between p-2\">\n                <h4 className=\"\">Hey, {this.state.username}</h4>\n                \n                <div>\n                  <a href=\"/limbs/\" className=\"btn m-2\">My Limbs ({this.state.limbs.length})</a>\n                  <a href=\"/logout/\" className='btn-logout btn m-2'>Logout</a>\n                </div>\n                \n              </div>\n            </div>\n          )}\n          \n          <br />\n          <br />\n          <br />\n\n          {!this.state.token && (\n            <div>\n              <a\n                className=\"btn btn--loginApp-link\"\n                href=\"/social/login/spotify/\"\n              >\n                Login to Spotify\n            </a>\n            </div>\n          )}\n          {this.state.token && (\n            <div>\n              <div className='player-wrapper'>\n\n                {this.state.item.album.images[0].url ? (\n                  <Player\n                    item={this.state.item}\n                    is_playing={this.state.is_playing}\n                    progress_ms={this.state.progress_ms}\n                  />\n                ) : (\n                    <div>\n                      <div>Let's get started.</div>\n                      <div>To make sure your Spotify is connected, play a song (on your phone, or any device) and hit the resync button to make sure you're connected</div>\n                    </div>\n                  )}\n                <button className='btn p-1 refresh-btn' onClick={() => this.getNowPlaying()}><span className=\"p-1\"><FontAwesomeIcon icon={faSync} /></span></button>\n\n              </div>\n              <br />\n              <br />\n              <br />\n              <button className={`btn ${this.state.use_now_playing ? 'btn-selected' : ''} `} onClick={() => this.useNowPlaying()}>Use Artists Related to Now Playing</button>\n              <button className={`btn ${this.state.use_top_artists ? 'btn-selected' : ''} `} onClick={() => this.useTopArtists()}>Use Your Top Artists</button>\n            </div>\n          )}\n\n\n          <br />\n          <br />\n          <br />\n\n          <div className={`${this.state.use_now_playing || this.state.use_top_artists ? 'd-flex align-items-center' : 'd-none'} `}>\n            <div>\n              <button className='btn' onClick={() => this.setState({ root_artists_selected: this.state.root_artists })}>All</button>\n              <button className='btn' onClick={() => this.setState({ root_artists_selected: [] })}>None</button>\n            </div>\n\n            <div>{root_artists}</div>\n\n          </div>\n\n          <br />\n          <br />\n          <br />\n\n          <div className={`${this.state.use_now_playing || this.state.use_top_artists ? 'd-flex align-items-center' : 'd-none'} `}>\n            <h2 className=\"m-2\">Select at least 3 starting bands to continue</h2>\n            <button\n              onClick={() => {\n                if (this.state.root_artists_selected.length >= 3) {\n                  this.setState({ root_artists_selection_complete: true })\n                }\n              }}\n              className={`${this.state.root_artists_selected.length >= 3 ? 'btn' : 'btn-disabled'} ${this.state.root_artists_selection_complete ? 'btn-selected' : ''}`}\n            >Continue Using These Bands</button>\n          </div>\n\n          <br />\n          <br />\n          <br />\n\n          <div className={`location ${this.state.root_artists_selection_complete ? 'd-flex' : 'd-none'}`}>\n            <div className=\"d-flex flex-column justify-content-left\">\n              <div className={` ${\"geolocation\" in navigator ? 'd-flex flex-column' : 'd-none'}`}>\n                <button className=\"btn\" onClick={this.useMyLocation}>Find My Location</button>\n                <p>~or~</p>\n              </div>\n              <div>Please enter your zip code: <input type='text'></input></div>\n            </div>\n\n            <div>{this.state.latitude}, {this.state.longitude}</div>\n\n          </div>\n\n          <br />\n          <br />\n          <br />\n\n          <div className={` ${this.state.root_artists_selection_complete && this.state.latitude !== 0 ? 'd-flex flex-column' : 'd-none'}`}>\n            Let's do the thing\n            <br />\n            <button className=\"btn\" onClick={() => this.findEvents()}>Find Events</button>\n            # of events found: {this.state.events_all.length} <br />\n            # of artist from those events: {this.state.events_artists.length}\n            <br />\n            <button className=\"btn\" onClick={() => this.findArtists()}>Find Artists</button>\n            # of artists found: {this.state.artists_all.length}\n            <br />\n            <button className=\"btn\" onClick={() => this.findMatches()}>Find Matches</button>\n            # of matches found: {this.state.matches.length}\n            <br />\n            <button className=\"btn\" onClick={() => this.makeLimbs()}>Make Limbs</button>\n            # of limbs made: {this.state.limbs.length}\n            <br />\n            {this.state.limbs.length > 0 && (limbs_table)}\n            <br />\n            <button className=\"btn\" onClick={() => this.makeBranch()}>Make Branch</button>\n            <br />\n\n\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}