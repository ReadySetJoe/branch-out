{"version":3,"sources":["Player.js","App.js","serviceWorker.js","index.js"],"names":["Player","props","backgroundStyles","backgroundImage","item","album","images","url","progressBarStyles","width","progress_ms","duration_ms","className","alt","src","name","artists","is_playing","style","axios","defaults","xsrfCookieName","xsrfHeaderName","spotifyApi","SpotifyWebApi","App","state","token","id","root_artists","root_artists_selected","use_now_playing","use_top_artists","root_artists_selection_complete","latitude","longitude","zipcode","use_zipcode","use_latlong","artists_all","events_all","events_artists","events","matches","limbs","getNowPlaying","bind","useTopArtists","useNowPlaying","selectArtist","useMyLocation","findEvents","addNowPlayingToList","this","get","then","res","_token","data","extra_data","access_token","setState","setAccessToken","catch","err","console","log","getMyCurrentPlaybackState","error","getArtistRelatedArtists","unshift","getMyTopArtists","items","formData","FormData","append","href","songs","length","localStorage","setItem","JSON","stringify","method","config","headers","artist","includes","_selected","splice","indexOf","push","e","preventDefault","self","navigator","geolocation","getCurrentPosition","position","coords","error_message","i","resultsPage","results","event","j","performance","totalEntries","total_entries","per_page","perPage","Math","ceil","num_calls","concat","events_artists_unique","Set","map","x","displayName","artists_all_unique","a","getArtistTopTracks","song","tracks","matches_also","k","key","onClick","limb","something","icon","faSync","type","findArtists","findMatches","makeLimbs","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1324f31c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Player.css\";\nconst Player = props => {\n  const backgroundStyles = {\n    backgroundImage:`url(${props.item.album.images[0].url})`,\n  };\n  \n  const progressBarStyles = {\n    width: (props.progress_ms * 100 / props.item.duration_ms) + '%'\n  };\n  \n  return (\n    <div className=\"App\">\n      <div className=\"main-wrapper\">\n        <div className=\"now-playing__img\">\n          <img alt=\"This should be the album art for the current playback\" src={props.item.album.images[0].url} />\n        </div>\n        <div className=\"now-playing__side\">\n          <div className=\"now-playing__name\">\n            {props.item.name}\n          </div>\n          <div className=\"now-playing__artist\">\n            {props.item.artists[0].name}\n          </div>\n          <div className=\"now-playing__status\">\n            {props.is_playing ? \"Playing\" : \"Paused\"}\n          </div>\n          <div className=\"progress\">\n            <div\n              className=\"progress__bar\"\n              style={progressBarStyles}\n            />\n          </div>\n        </div>\n        <div className=\"background\" style={backgroundStyles} />{\" \"}\n      </div>\n    </div>\n  );\n}\nexport default Player;","import React from 'react';\nimport axios from 'axios';\nimport * as os from 'os';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\n// import Geocode from 'react-geocode';\n// import Geohash from 'https://cdn.jsdelivr.net/npm/latlon-geohash@2.0.0';\n\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from \"./Player\";\n// import Navigator from \"./Navigator\";\nimport './App.css';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst spotifyApi = new SpotifyWebApi();\n\nlet SK_AUTH_KEY = 'io09K9l3ebJxmxe2'\n\n// API Limiter (debug boolean ensuring limited API calling) \nconst API_LIMITER = true;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: null,\n\n      // Now Playing\n      item: {\n        album: {\n          images: [{ url: \"\" }]\n        },\n        name: \"\",\n        artists: [{ name: \"\", id: \"\" }],\n        duration_ms: 0,\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0,\n\n      // Artist Selection\n      root_artists: [],\n      root_artists_selected: [],\n      use_now_playing: false,\n      use_top_artists: false,\n      root_artists_selection_complete: false,\n\n      // Location\n      latitude: 0,\n      longitude: 0,\n      zipcode: 0,\n      use_zipcode: false,\n      use_latlong: false,\n\n      // Artists\n      artists_all: [],\n      artists: [],\n      // Events\n      events_all: [],\n      events_artists: [],\n      events: [],\n      // Matches\n      matches: [],\n\n      // Limbs\n      limbs: [\n        // {artist: {}, event: {}, song: {},},\n      ],\n\n    };\n    this.getNowPlaying = this.getNowPlaying.bind(this);\n    this.useTopArtists = this.useTopArtists.bind(this);\n    this.useNowPlaying = this.useNowPlaying.bind(this);\n    this.selectArtist = this.selectArtist.bind(this);\n    this.useMyLocation = this.useMyLocation.bind(this);\n    this.findEvents = this.findEvents.bind(this);\n    this.addNowPlayingToList = this.addNowPlayingToList.bind(this);\n  }\n\n  componentDidMount() {\n    // Reloads user, based on token stored in state\n    if (!this.state.token) {\n      axios.get(`/api/v1/user-social-auth/`)\n        .then(res => {\n          let _token = res.data[0].extra_data.access_token\n          this.setState({token: _token});\n          spotifyApi.setAccessToken(_token)\n          this.getNowPlaying()\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    } else {\n      this.getNowPlaying()\n    }\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState()\n      .then(data => {\n        if (data) {\n          this.setState({\n            item: data.item,\n            is_playing: data.is_playing,\n            progress_ms: data.progress_ms,\n            use_now_playing: false,\n          });\n        }\n        console.log(data)\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          item: {\n            album: {\n              images: [{ url: \"\" }]\n            },\n            name: \"\",\n            artists: [{ name: \"\", id: \"\" }],\n            duration_ms: 0,\n          },\n          is_playing: \"Spotify Not Currently in use\",\n          progress_ms: 0,\n        });\n      })\n  }\n\n  useNowPlaying() {\n    spotifyApi.getArtistRelatedArtists(this.state.item.artists[0].id)\n      .then(data => {\n        let root_artists = data.artists\n        root_artists.unshift(this.state.item.artists[0])  \n        this.setState({\n          root_artists: root_artists,\n          use_now_playing: true,\n          use_top_artists: false\n        })\n        console.log(data)\n      })\n      .catch(err => console.log(err))\n  }\n\n  useTopArtists() {\n    spotifyApi.getMyTopArtists()\n      .then(data => {\n        this.setState({\n          root_artists: data.items,\n          use_top_artists: true,\n          use_now_playing: false\n        })\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  addNowPlayingToList() {\n    let formData = new FormData();\n    formData.append('title', this.state.item.name);\n    formData.append('artist', this.state.item.artists[0].name);\n    formData.append('url', this.state.item.href);\n    formData.append('track_number', this.state.songs.length);\n    formData.append('duration_ms', this.state.item.duration_ms);\n    localStorage.setItem('formData', JSON.stringify(formData))\n    localStorage.setItem('state-addnowplaying', JSON.stringify(this.state))\n    console.log(formData)\n\n    axios({\n      method: 'post',\n      url: '/api/v1/songs/',\n      config: { headers: { 'content-type': 'multipart/form-data' } },\n      data: formData,\n    })\n      .then(() => {\n        console.log('Current song added to song list!')\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  selectArtist(artist) {\n    // Handles selected root artist toggling\n    if (!this.state.root_artists_selected.includes(artist)) {\n      let _selected = [...this.state.root_artists_selected]\n      _selected.push(artist)\n      this.setState({ root_artists_selected: _selected })\n    } else {\n      let _selected = [...this.state.root_artists_selected]\n      _selected.splice(_selected.indexOf(artist), 1)\n      this.setState({ root_artists_selected: _selected })\n    }\n  }\n\n  useMyLocation(e) {\n    e.preventDefault()\n    let self = this;\n    navigator.geolocation.getCurrentPosition(\n      function success(position) {\n        self.setState({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        })\n      },\n      function error(error_message) {\n        console.error('An error has occured while retrieving location', error_message)\n      }\n    )\n  }\n\n  findEvents() {\n    axios({\n      method: 'get',\n      url: `https://api.songkick.com/api/3.0/events.json?apikey=${SK_AUTH_KEY}&location=geo:${this.state.latitude},${this.state.longitude}&page=1`,\n    })\n      .then(res => {\n        this.setState({ events_all: res.data.resultsPage.results.event })\n        let i;\n        let events_artists = [...this.state.events_artists];\n        for (i = 0; i < this.state.events_all.length; i++) {\n          let e = this.state.events_all[i];\n          let j\n          for (j = 0; j < e.performance.length; j++) {\n            events_artists.push(e.performance[j].artist)\n          }\n        }\n        this.setState({ events_artists: events_artists })\n\n\n        // If more than 50 events are available, and the first page didn't contain them all\n        if (res.data.resultsPage.totalEntries > res.data.resultsPage.results.event.length & !API_LIMITER) {\n          const total_entries = res.data.resultsPage.totalEntries\n          const per_page = res.data.resultsPage.perPage\n          console.log(`There are ${total_entries} results and ${per_page} on each page`)\n          console.log(`Which means the site needs to make ${Math.ceil(total_entries / per_page)} calls total`)\n          console.log(`and the last call should have ${total_entries % per_page} entries`)\n          const num_calls = Math.ceil(total_entries / per_page)\n          let i\n          for (i = 1; i < num_calls; i++) {\n            // Call the next page\n            axios({\n              method: 'get',\n              url: `https://api.songkick.com/api/3.0/events.json?apikey=${SK_AUTH_KEY}&location=geo:${this.state.latitude},${this.state.longitude}&page=${i+1}`,\n              // eslint-disable-next-line no-loop-func\n            })\n            .then(res => {\n              // Add the events to state\n              let events_all = [...this.state.events_all]\n              events_all = events_all.concat(res.data.resultsPage.results.event)\n              this.setState({ events_all: events_all })\n\n              // Add all artists to state (COULD BE REFACTORED WITH MAP)\n              let i;\n              let events_artists = [...this.state.events_artists];\n              for (i = 0; i < this.state.events_all.length; i++) {\n                let e = this.state.events_all[i];\n                let j\n                for (j = 0; j < e.performance.length; j++) {\n                  events_artists.push(e.performance[j].artist)\n                }\n              }\n              console.log(events_all)\n              this.setState({ events_artists: events_artists })\n            })\n            .catch(err => {\n              console.log(err)\n            })\n          }\n        }\n        console.log({events_artists})\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  findArtists() {\n    let i;\n    for (i = 0; i < this.state.root_artists_selected.length; i++) {\n      spotifyApi.getArtistRelatedArtists(this.state.root_artists_selected[i].id)\n        // eslint-disable-next-line no-loop-func\n        .then(res => {\n          let artists_all = [...this.state.artists_all]\n          artists_all = artists_all.concat(res.artists)\n          this.setState({ artists_all: artists_all })\n          console.log(res)\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    }\n  }\n\n  findMatches() {\n    console.log(`There are ${this.state.events_artists.length} artists from events`)\n    let events_artists = [...this.state.events_artists];\n    const events_artists_unique = [...new Set(events_artists.map(x => x.displayName))];\n    console.log(`${events_artists_unique.length} are unique`)\n\n    console.log(`There are ${this.state.artists_all.length} artists from events`)\n    let artists_all = [...this.state.artists_all];\n    const artists_all_unique = [...new Set(artists_all.map(x => x.name))];\n    console.log(`${artists_all_unique.length} are unique`)\n\n    // this.setState({\n    //   events_artists: events_artists_unique,\n    //   artists_all: artists_all_unique\n    // })\n\n    let i, j, a, b, matches = [];\n    for (i = 0; i < artists_all_unique.length; i++) {\n      a = artists_all_unique[i];\n      for (j = 0; j < events_artists_unique.length; j++) {\n        b = events_artists_unique[j]\n        if (a === b) {\n          matches.push(a)\n        }\n      }\n    }\n    console.log(`and there are ${matches.length} matches`)\n    console.log(matches)\n    this.setState({ matches: matches })\n  }\n\n  makeLimbs() {\n    let j = 0;\n    let matches = [...this.state.matches]\n    let limbs = []\n\n    while (matches.length && j<this.state.artists_all.length) {\n      let a = this.state.artists_all[j]\n      if (matches.includes(a.name)) {\n        spotifyApi.getArtistTopTracks(a.id, \"ES\")\n        .then(res => {\n          limbs.push({artist: a, song: res.tracks[0]})\n          let i = 0;\n          let matches_also = [...this.state.matches]\n      \n          while (matches_also.length && i<this.state.events_all.length) {\n            let e = this.state.events_all[i]\n            for (let j=0; j<e.performance.length; j++) {\n              if (matches_also.includes(e.performance[j].artist.displayName)) {\n                for (let k=0; k<limbs.length; k++) {\n                  if (limbs[k].artist.name === e.performance[j].artist.displayName) {\n                    limbs[k].event = e\n                  }\n                }\n                matches_also.splice(matches_also.indexOf(e.performance[j].artist.displayName),1)\n              }\n            }\n            i++;\n          }\n      \n          console.log(limbs)\n          this.setState({limbs:limbs})\n        })\n        .catch(err => console.log(err))\n        matches.splice(matches.indexOf(a.name),1)\n      }\n      j++;\n    }\n\n  \n    \n    \n    \n      \n\n  }\n\n  render() {\n    let root_artists = this.state.root_artists.map((artist, id) =>\n      <button key={id}\n        className={`btn root-artist-btn ${this.state.root_artists_selected.includes(artist) ? ('btn-selected') : ('')}`}\n        onClick={() => this.selectArtist(artist)}\n      >\n        {artist.name}\n      </button>\n    )\n\n    let limbs = this.state.limbs.map((limb, id) =>\n      <div key={id} className=\"m-2\">\n        {limb.something}\n      </div>\n    )\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <nav className=\"scrollspy-placeholder\"><ul></ul></nav>\n          {this.state.token && (\n            <div className=\"position-fixed fixed-top d-flex flex-row-reverse\">\n              <a href=\"/logout/\" className='btn-logout btn m-3'>Logout</a>\n            </div>\n          )}\n          <br />\n          <br />\n          <br />\n\n          {!this.state.token && (\n            <div>\n              <a\n                className=\"btn btn--loginApp-link\"\n                href=\"/social/login/spotify/\"\n              >\n                Login to Spotify\n            </a>\n            </div>\n          )}\n          {this.state.token && (\n            <div>\n              <div className='player-wrapper'>\n\n                {this.state.item.album.images[0].url ? (\n                  <Player\n                    item={this.state.item}\n                    is_playing={this.state.is_playing}\n                    progress_ms={this.state.progress_ms}\n                  />\n                ) : (\n                    <div>\n                      <div>Let's get started.</div>\n                      <div>To make sure your Spotify is connected, play a song (on your phone, or any device) and hit the resync button to make sure you're connected</div>\n                    </div>\n                  )}\n                <button className='btn p-1 refresh-btn' onClick={() => this.getNowPlaying()}><span className=\"p-1\"><FontAwesomeIcon icon={faSync} /></span></button>\n\n              </div>\n              <br />\n              <br />\n              <br />\n              <button className={`btn ${this.state.use_now_playing ? 'btn-selected' : ''} `} onClick={() => this.useNowPlaying()}>Use Artists Related to Now Playing</button>\n              <button className={`btn ${this.state.use_top_artists ? 'btn-selected' : ''} `} onClick={() => this.useTopArtists()}>Use Your Top Artists</button>\n            </div>\n          )}\n\n\n          <br />\n          <br />\n          <br />\n\n          <div className={`${this.state.use_now_playing || this.state.use_top_artists ? 'd-flex align-items-center' : 'd-none'} `}>\n            <div>\n              <button className='btn' onClick={() => this.setState({ root_artists_selected: this.state.root_artists })}>All</button>\n              <button className='btn' onClick={() => this.setState({ root_artists_selected: [] })}>None</button>\n            </div>\n\n            <div>{root_artists}</div>\n\n          </div>\n\n          <br />\n          <br />\n          <br />\n\n          <div className={`${this.state.use_now_playing || this.state.use_top_artists ? 'd-flex align-items-center' : 'd-none'} `}>\n            <h2 className=\"m-2\">Select at least 3 starting bands to continue</h2>\n            <button\n              onClick={() => {\n                if (this.state.root_artists_selected.length >= 3) {\n                  this.setState({ root_artists_selection_complete: true })\n                }\n              }}\n              className={`${this.state.root_artists_selected.length >= 3 ? 'btn' : 'btn-disabled'} ${this.state.root_artists_selection_complete ? 'btn-selected' : ''}`}\n            >Continue Using These Bands</button>\n          </div>\n\n          <br />\n          <br />\n          <br />\n\n          <div className={`location ${this.state.root_artists_selection_complete ? 'd-flex' : 'd-none'}`}>\n            <div className=\"d-flex flex-column justify-content-left\">\n              <div className={` ${\"geolocation\" in navigator ? 'd-flex flex-column' : 'd-none'}`}>\n                <button className=\"btn\" onClick={this.useMyLocation}>Find My Location</button>\n                <p>~or~</p>\n              </div>\n              <div>Please enter your zip code: <input type='text'></input></div>\n            </div>\n\n            <div>{this.state.latitude}, {this.state.longitude}</div>\n\n          </div>\n\n          <br />\n          <br />\n          <br />\n\n          <div className={` ${this.state.root_artists_selection_complete && this.state.latitude !== 0 ? 'd-flex flex-column' : 'd-none'}`}>\n            Let's do the thing\n            <br />\n            <button className=\"btn\" onClick={() => this.findEvents()}>Find Events</button>\n            # of events found: {this.state.events_all.length} <br />\n            # of artist from those events: {this.state.events_artists.length}\n            <br />\n            <button className=\"btn\" onClick={() => this.findArtists()}>Find Artists</button>\n            # of artists found: {this.state.artists_all.length}\n            <br />\n            <button className=\"btn\" onClick={() => this.findMatches()}>Find Matches</button>\n            # of matches found: {this.state.matches.length}\n            <br />\n            <button className=\"btn\" onClick={() => this.makeLimbs()}>Make Limbs</button>\n            # of limbs made: {this.state.limbs.length}\n\n\n          </div>\n\n          {this.state.matches.length > 0 && (\n            <div className=\"\">\n              {limbs}\n            </div>)}\n\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}