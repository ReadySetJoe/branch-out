{"version":3,"sources":["Player.js","Modal.js","App.js","serviceWorker.js","index.js"],"names":["Player","props","backgroundStyles","backgroundImage","item","album","images","url","progressBarStyles","width","progress_ms","duration_ms","className","alt","src","name","artists","is_playing","style","UserModal","state","branches","this","map","branch","id","key","console","log","Modal","show","onHide","handleClose","Header","closeButton","Title","Body","Footer","Button","variant","onClick","React","Component","axios","defaults","xsrfCookieName","xsrfHeaderName","spotifyApi","SpotifyWebApi","App","token","username","uid","root_artists","root_artists_selected","use_now_playing","use_top_artists","root_artists_selection_complete","latitude","longitude","zipcode","use_zipcode","use_latlong","artists_all","events_all","events_artists","events","matches","limbs","preview","image","limbs_user","branches_user","show_modal","myRef","createRef","getNowPlaying","bind","useTopArtists","useNowPlaying","selectArtist","useMyLocation","findEvents","addNowPlayingToList","handleImageChange","makeLimbs","makeBranch","save","load","get","then","res","setAccessToken","data","extra_data","access_token","setState","user","first_name","catch","err","getMyCurrentPlaybackState","error","getArtistRelatedArtists","unshift","getMyTopArtists","items","formData","FormData","append","href","songs","length","localStorage","setItem","JSON","stringify","method","config","headers","artist","includes","_selected","splice","indexOf","push","e","preventDefault","self","navigator","geolocation","getCurrentPosition","position","coords","error_message","i","resultsPage","results","event","j","performance","totalEntries","total_entries","per_page","perPage","Math","ceil","num_calls","concat","events_artists_unique","Set","x","displayName","artists_all_unique","a","getArtistTopTracks","song","tracks","matches_also","k","branch_data","limb","artist_url","external_urls","spotify","artist_id","artist_name","event_id","event_uri","uri","event_name","event_city","location","city","event_date","start","date","venue_name","venue","venue_id","venue_url","song_url","song_name","song_preview_url","preview_url","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","parse","getItem","rel","replace","slice","limbs_table","type","icon","faSync","findArtists","findMatches","onSubmit","current","click","faPagelines","ref","onChange","value","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4089d1e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Player.css\";\nconst Player = props => {\n  const backgroundStyles = {\n    backgroundImage:`url(${props.item.album.images[0].url})`,\n  };\n  \n  const progressBarStyles = {\n    width: (props.progress_ms * 100 / props.item.duration_ms) + '%'\n  };\n  \n  return (\n    <div className=\"App\">\n      <div className=\"main-wrapper\">\n        <div className=\"now-playing__img\">\n          <img alt=\"This should be the album art for the current playback\" src={props.item.album.images[0].url} />\n        </div>\n        <div className=\"now-playing__side\">\n          <div className=\"now-playing__name\">\n            {props.item.name}\n          </div>\n          <div className=\"now-playing__artist\">\n            {props.item.artists[0].name}\n          </div>\n          <div className=\"now-playing__status\">\n            {props.is_playing ? \"Playing\" : \"Paused\"}\n          </div>\n          <div className=\"progress\">\n            <div\n              className=\"progress__bar\"\n              style={progressBarStyles}\n            />\n          </div>\n        </div>\n        <div className=\"background\" style={backgroundStyles} />{\" \"}\n      </div>\n    </div>\n  );\n}\nexport default Player;","import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nclass UserModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n\n  render() {\n    let branches = this.props.branches.map((branch, id) =>\n    <div key={id}>\n      {id}\n    </div>)\n\n    console.log(this.props.branches)\n    return (\n      <>\n        <Modal show={this.props.show} onHide={this.props.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Modal heading</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            Woohoo, you're reading this text in a modal!\n            <div>\n              {branches}\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.props.handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={this.props.handleClose}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );  \n  }\n}\n\nexport default UserModal","import React from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync} from '@fortawesome/free-solid-svg-icons';\nimport { faPagelines } from '@fortawesome/free-brands-svg-icons';\n\n\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from \"./Player\";\nimport Modal from \"./Modal\";\nimport './App.css';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst spotifyApi = new SpotifyWebApi();\n\nconst SK_AUTH_KEY = 'io09K9l3ebJxmxe2'\n\n// Debug Variables\nconst API_LIMITER = false; // API Limiter (debug boolean ensuring limited API calling) \nconst SAVE_TO_LOCAL_STORAGE = false;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: null,\n      username: '',\n      uid: '',\n      id: '',\n\n      // Now Playing\n      item: {\n        album: {\n          images: [{ url: \"\" }]\n        },\n        name: \"\",\n        artists: [{ name: \"\", id: \"\" }],\n        duration_ms: 0,\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0,\n\n      // Artist Selection\n      root_artists: [],\n      root_artists_selected: [],\n      use_now_playing: false,\n      use_top_artists: false,\n      root_artists_selection_complete: false,\n\n      // Location\n      latitude: 0,\n      longitude: 0,\n      zipcode: 0,\n      use_zipcode: false,\n      use_latlong: false,\n\n      // Artists\n      artists_all: [],\n      artists: [],\n      // Events\n      events_all: [],\n      events_artists: [],\n      events: [],\n      // Matches\n      matches: [],\n\n      // Limbs\n      limbs: [],\n\n      // Branch\n      branch: [],\n      preview: \"\",\n      image: null,\n\n      // Database\n      limbs_user: [],\n      branches_user: [],\n      show_modal: false,\n    };\n    this.myRef = React.createRef();\n\n    this.getNowPlaying = this.getNowPlaying.bind(this);\n    this.useTopArtists = this.useTopArtists.bind(this);\n    this.useNowPlaying = this.useNowPlaying.bind(this);\n    this.selectArtist = this.selectArtist.bind(this);\n    this.useMyLocation = this.useMyLocation.bind(this);\n    this.findEvents = this.findEvents.bind(this);\n    this.addNowPlayingToList = this.addNowPlayingToList.bind(this);\n    this.handleImageChange = this.handleImageChange.bind(this);\n    this.makeLimbs = this.makeLimbs.bind(this);\n    this.makeBranch = this.makeBranch.bind(this);\n    this.save = this.save.bind(this);\n    this.load = this.load.bind(this);\n  }\n\n  componentDidMount() {\n    // Reloads user, based on token stored in state\n    if (!this.state.token) {\n      axios.get(`/api/v1/user-social-auth/`)\n        .then(res => {\n          console.log(res)\n          spotifyApi.setAccessToken(res.data[0].extra_data.access_token)\n          this.getNowPlaying()\n          this.setState({\n            token: res.data[0].extra_data.access_token,\n            username: res.data[0].user.first_name,\n            uid: res.data[0].uid,\n            id: res.data[0].id,\n          });\n          axios.get(`/api/v1/branches/`)\n            .then(res => {\n              console.log(res)\n              this.setState({ branches_user: res.data })\n            })\n            .catch(err => console.log(err))\n\n          axios.get(`/api/v1/limbs/`)\n            .then(res => { console.log(res) })\n            .catch(err => { console.log(err) })\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    } else {\n      this.getNowPlaying()\n    }\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState()\n      .then(data => {\n        if (data) {\n          this.setState({\n            item: data.item,\n            is_playing: data.is_playing,\n            progress_ms: data.progress_ms,\n            use_now_playing: false,\n          });\n        }\n        console.log(data)\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          item: {\n            album: {\n              images: [{ url: \"\" }]\n            },\n            name: \"\",\n            artists: [{ name: \"\", id: \"\" }],\n            duration_ms: 0,\n          },\n          is_playing: \"Spotify Not Currently in use\",\n          progress_ms: 0,\n        });\n      })\n  }\n\n  useNowPlaying() {\n    spotifyApi.getArtistRelatedArtists(this.state.item.artists[0].id)\n      .then(data => {\n        let root_artists = data.artists\n        root_artists.unshift(this.state.item.artists[0])\n        this.setState({\n          root_artists: root_artists,\n          use_now_playing: true,\n          use_top_artists: false\n        })\n        console.log(data)\n      })\n      .catch(err => console.log(err))\n  }\n\n  useTopArtists() {\n    spotifyApi.getMyTopArtists()\n      .then(data => {\n        this.setState({\n          root_artists: data.items,\n          use_top_artists: true,\n          use_now_playing: false\n        })\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  addNowPlayingToList() {\n    let formData = new FormData();\n    formData.append('title', this.state.item.name);\n    formData.append('artist', this.state.item.artists[0].name);\n    formData.append('url', this.state.item.href);\n    formData.append('track_number', this.state.songs.length);\n    formData.append('duration_ms', this.state.item.duration_ms);\n    localStorage.setItem('formData', JSON.stringify(formData))\n    localStorage.setItem('state-addnowplaying', JSON.stringify(this.state))\n    console.log(formData)\n\n    axios({\n      method: 'post',\n      url: '/api/v1/songs/',\n      config: { headers: { 'content-type': 'multipart/form-data' } },\n      data: formData,\n    })\n      .then(() => {\n        console.log('Current song added to song list!')\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  selectArtist(artist) {\n    // Handles selected root artist toggling\n    if (!this.state.root_artists_selected.includes(artist)) {\n      let _selected = [...this.state.root_artists_selected]\n      _selected.push(artist)\n      this.setState({ root_artists_selected: _selected })\n    } else {\n      let _selected = [...this.state.root_artists_selected]\n      _selected.splice(_selected.indexOf(artist), 1)\n      this.setState({ root_artists_selected: _selected })\n    }\n  }\n\n  useMyLocation(e) {\n    e.preventDefault()\n    let self = this;\n    navigator.geolocation.getCurrentPosition(\n      function success(position) {\n        self.setState({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        })\n      },\n      function error(error_message) {\n        console.error('An error has occured while retrieving location', error_message)\n      }\n    )\n  }\n\n  findEvents() {\n    axios({\n      method: 'get',\n      url: `https://api.songkick.com/api/3.0/events.json?apikey=${SK_AUTH_KEY}&location=geo:${this.state.latitude},${this.state.longitude}&page=1`,\n    })\n      .then(res => {\n        this.setState({ events_all: res.data.resultsPage.results.event })\n        let i;\n        let events_artists = [...this.state.events_artists];\n        for (i = 0; i < this.state.events_all.length; i++) {\n          let e = this.state.events_all[i];\n          let j\n          for (j = 0; j < e.performance.length; j++) {\n            events_artists.push(e.performance[j].artist)\n          }\n        }\n        this.setState({ events_artists: events_artists })\n\n\n        // If more than 50 events are available, and the first page didn't contain them all\n        if (res.data.resultsPage.totalEntries > res.data.resultsPage.results.event.length & !API_LIMITER) {\n          const total_entries = res.data.resultsPage.totalEntries\n          const per_page = res.data.resultsPage.perPage\n          console.log(`There are ${total_entries} results and ${per_page} on each page`)\n          console.log(`Which means the site needs to make ${Math.ceil(total_entries / per_page)} calls total`)\n          console.log(`and the last call should have ${total_entries % per_page} entries`)\n          const num_calls = Math.ceil(total_entries / per_page)\n          let i\n          for (i = 1; i < num_calls; i++) {\n            // Call the next page\n            axios({\n              method: 'get',\n              url: `https://api.songkick.com/api/3.0/events.json?apikey=${SK_AUTH_KEY}&location=geo:${this.state.latitude},${this.state.longitude}&page=${i + 1}`,\n              // eslint-disable-next-line no-loop-func\n            })\n              .then(res => {\n                // Add the events to state\n                let events_all = [...this.state.events_all]\n                events_all = events_all.concat(res.data.resultsPage.results.event)\n                this.setState({ events_all: events_all })\n\n                // Add all artists to state (COULD BE REFACTORED WITH MAP)\n                let events_artists = [...this.state.events_artists];\n                for (let i = 0; i < this.state.events_all.length; i++) {\n                  let e = this.state.events_all[i];\n                  for (let j = 0; j < e.performance.length; j++) {\n                    if (!events_artists.includes(e.performance[j].artist)) {\n                      events_artists.push(e.performance[j].artist)\n                    }\n                  }\n                }\n                // console.log(events_all)\n                this.setState({ events_artists: events_artists })\n              })\n              .catch(err => {\n                console.log(err)\n              })\n          }\n        }\n        console.log({ events_artists })\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  findArtists() {\n    let i;\n    for (i = 0; i < this.state.root_artists_selected.length; i++) {\n      spotifyApi.getArtistRelatedArtists(this.state.root_artists_selected[i].id)\n        // eslint-disable-next-line no-loop-func\n        .then(res => {\n          let artists_all = [...this.state.artists_all]\n          artists_all = artists_all.concat(res.artists)\n          this.setState({ artists_all: artists_all })\n          console.log(res)\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    }\n  }\n\n  findMatches() {\n    console.log(`There are ${this.state.events_artists.length} artists from events`)\n    let events_artists = [...this.state.events_artists];\n    const events_artists_unique = [...new Set(events_artists.map(x => x.displayName))];\n    console.log(`${events_artists_unique.length} are unique`)\n\n    console.log(`There are ${this.state.artists_all.length} artists from events`)\n    let artists_all = [...this.state.artists_all];\n    const artists_all_unique = [...new Set(artists_all.map(x => x.name))];\n    console.log(`${artists_all_unique.length} are unique`)\n\n    let i, j, a, b, matches = [];\n    for (i = 0; i < artists_all_unique.length; i++) {\n      a = artists_all_unique[i];\n      for (j = 0; j < events_artists_unique.length; j++) {\n        b = events_artists_unique[j]\n        if (a === b) {\n          matches.push(a)\n        }\n      }\n    }\n    console.log(`and there are ${matches.length} matches`)\n    console.log(matches)\n    this.setState({ matches: matches })\n  }\n\n  makeLimbs() {\n    let j = 0;\n    let matches = [...this.state.matches]\n    let limbs = []\n\n    while (matches.length && j < this.state.artists_all.length) {\n      let a = this.state.artists_all[j]\n      if (matches.includes(a.name)) {\n        spotifyApi.getArtistTopTracks(a.id, \"ES\")\n          .then(res => {\n            limbs.push({ artist: a, song: res.tracks[0] })\n            let i = 0;\n            let matches_also = [...this.state.matches]\n\n            while (matches_also.length && i < this.state.events_all.length) {\n              let e = this.state.events_all[i]\n              for (let j = 0; j < e.performance.length; j++) {\n                if (matches_also.includes(e.performance[j].artist.displayName)) {\n                  for (let k = 0; k < limbs.length; k++) {\n                    if (limbs[k].artist.name === e.performance[j].artist.displayName) {\n                      limbs[k].event = e\n                      console.log(e)\n                      // limbs.sort((a, b) => b.event.start.date - a.event.start.date)\n                    }\n                  }\n                  matches_also.splice(matches_also.indexOf(e.performance[j].artist.displayName), 1)\n                }\n              }\n              i++;\n            }\n\n            console.log(limbs)\n            this.setState({ limbs: limbs })\n          })\n          .catch(err => console.log(err))\n        matches.splice(matches.indexOf(a.name), 1)\n      }\n      j++;\n    }\n  }\n\n  makeBranch(e) {\n    e.preventDefault()\n    let branches_user = [...this.state.branches_user]\n    branches_user.push(this.state.branch)\n    this.setState({branches_user: branches_user})\n\n    let branch_data = new FormData();\n    if (this.state.image) {branch_data.append('cover', this.state.image)}\n    let limbs = []\n    for (let i = 0; i < this.state.limbs.length; i++) {\n      let limb = {\n        artist_url: this.state.limbs[i].artist.external_urls.spotify,\n        artist_id: this.state.limbs[i].artist.id,\n        artist_name: this.state.limbs[i].artist.name,\n        event_id: this.state.limbs[i].event.id,\n        event_uri: this.state.limbs[i].event.uri,\n        event_name: this.state.limbs[i].event.displayName,\n        event_city: this.state.limbs[i].event.location.city,\n        event_date: this.state.limbs[i].event.start.date,\n        venue_name: this.state.limbs[i].event.venue.displayName,\n        venue_id: this.state.limbs[i].event.venue.id,\n        venue_url: this.state.limbs[i].event.venue.uri,\n        song_url: this.state.limbs[i].song.external_urls.spotify,\n        song_name: this.state.limbs[i].song.name,\n        song_preview_url: this.state.limbs[i].song.preview_url,\n      }\n      limbs.push(limb)\n    }\n    limbs = JSON.stringify(limbs)\n\n    branch_data.append('limbs', limbs)\n\n    axios({\n      method: 'post',\n      url: '/api/v1/branch/',\n      data: branch_data,\n      config: {\n        headers: { 'Content-Type': 'multipart/form-data' }\n      }\n    })\n      .then(res => console.log(res))\n      .catch(err => console.log(err))\n  }\n\n  handleImageChange(e) {\n    let file = e.target.files[0];\n    // console.log(file)\n    this.setState({image: file});\n    \n    let reader = new FileReader();\n    reader.onloadend = () => {\n      this.setState({preview: reader.result})\n    };\n\n    reader.readAsDataURL(file);\n  }\n  save() {\n    let state = {}\n    state.token = this.state.token;\n    state.artists = this.state.artists;\n    state.artists_all = this.state.artists_all;\n    state.events = this.state.events;\n    state.events_all = this.state.events_all;\n    state.events_artists = this.state.events_artists;\n    state.is_playing = this.state.is_playing;\n    state.item = this.state.item;\n    state.latitude = this.state.latitude;\n    state.limbs = this.state.limbs;\n    state.longitude = this.state.longitude;\n    state.matches = this.state.matches;\n    state.progress_ms = this.state.progress_ms;\n    state.root_artists = this.state.root_artists;\n    state.root_artists_selected = this.state.root_artists_selected;\n    state.root_artists_selection_complete = this.state.root_artists_selection_complete;\n    state.use_latlong = this.state.use_latlong;\n    state.use_now_playing = this.state.use_now_playing;\n    state.use_top_artists = this.state.use_top_artists;\n    state.use_zipcode = this.state.use_zipcode;\n    state.username = this.state.username;\n    state.zipcode = this.state.zipcode;\n    state.uid = this.state.uid;\n    state.id = this.state.id;\n    state.show_modal = this.state.show_modal;\n    localStorage.setItem('state', JSON.stringify(state))\n    console.log('State Saved!')\n    console.log(state)\n  }\n\n  load() {\n    let state = JSON.parse(localStorage.getItem('state'))\n    this.setState(state)\n    console.log('State Loaded!')\n    console.log(state)\n  }\n\n  render() {\n    let root_artists = this.state.root_artists.map((artist, id) =>\n      <button key={id}\n        className={`btn root-artist-btn ${this.state.root_artists_selected.includes(artist) ? ('btn-selected') : ('')}`}\n        onClick={() => this.selectArtist(artist)}\n      >\n        {artist.name}\n      </button>\n    )\n\n    let limbs = this.state.limbs.map((limb, id) =>\n      <div key={id} className=\"limb d-flex align-text-center\">\n        <div>{id + 1}</div>\n        <div className=\"col-3 text-left\"><a target=\"_blank\" rel=\"noopener noreferrer\" href={limb.artist.external_urls.spotify}>{limb.artist.name}</a></div>\n        <div className=\"col-3 text-left\"><a target=\"_blank\" rel=\"noopener noreferrer\" href={limb.song.external_urls.spotify}>{limb.song.name}</a></div>\n        <div className=\"col-2\"><a target=\"_blank\" rel=\"noopener noreferrer\" href={limb.event.venue.uri}>{limb.event.venue.displayName}</a></div>\n        <div className=\"col-1\"><a target=\"_blank\" rel=\"noopener noreferrer\" href={limb.event.uri}>get tix</a></div>\n        <div className=\"col-2\">{limb.event.location.city.replace(\", US\", \"\")}</div>\n        <div>{limb.event.start.date.slice(5, limb.event.start.date.length)}</div>\n        <button className=\"btn-delete position-absolute\">x</button>\n      </div>\n    )\n\n    let limbs_table =\n      <div className=\"limbs\">\n        <div className=\"limb font-weight-bolder\">\n          <div>#</div>\n          <div className=\"col-3 text-left\">Artist</div>\n          <div className=\"col-3 text-left\">Top Song</div>\n          <div className=\"col-2\">Venue</div>\n          <div className=\"col-1\">Tickets</div>\n          <div className=\"col-2\">City</div>\n          <div>Date</div>\n        </div>\n        {limbs}\n      </div>\n\n      console.log(this.state.image)\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {SAVE_TO_LOCAL_STORAGE && (\n            <div style={{ position: \"fixed\", bottom: 5, right: 5, }}>\n              <button className='btn' onClick={() => this.save()}>save</button>\n              <button className='btn' onClick={() => this.load()}>load</button>\n            </div>\n          )}\n          <Modal \n            show={this.state.show_modal}\n            branches={this.state.branches_user}\n            limbs={this.state.limbs_user}\n            handleClose={() => this.setState({show_modal: false})}\n          />\n          <h1 className=\"title\">branch.out</h1>\n          <nav className=\"scrollspy-placeholder fixed-left\"><ul></ul></nav>\n          {this.state.token && (\n            <div>\n              <div className=\"top-bar fixed-top d-flex align-items-center justify-content-between p-2\">\n                <h4 className=\"\">Hey, {this.state.username}</h4>\n\n                <div>\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.setState({ show_modal: true })}>\n                    My Branches ({this.state.branches_user.length})\n                  </button>\n                  <a href=\"/accounts/logout/\" className='btn-logout btn m-2'>Logout</a>\n                </div>\n\n              </div>\n            </div>\n          )}\n\n          <br />\n          <br />\n          <br />\n\n          {!this.state.token && (\n            <div>\n              <a\n                className=\"btn btn--loginApp-link\"\n                href=\"/social/login/spotify/\"\n              >\n                Login to Spotify\n            </a>\n            </div>\n          )}\n          {this.state.token && (\n            <div>\n              <div className='player-wrapper'>\n\n                {this.state.item.album.images[0].url ? (\n                  <Player\n                    item={this.state.item}\n                    is_playing={this.state.is_playing}\n                    progress_ms={this.state.progress_ms}\n                  />\n                ) : (\n                    <div>\n                      <h3>Let's get started.</h3>\n                      <div>To make sure your Spotify is connected, play a song (on your phone, or any device) and hit the resync button to make sure you're connected</div>\n                    </div>\n                  )}\n                <button className='btn p-1 refresh-btn' onClick={() => this.getNowPlaying()}><span className=\"p-1\"><FontAwesomeIcon icon={faSync} /></span></button>\n\n              </div>\n              <br />\n              <br />\n              <br />\n              <button className={`btn ${this.state.use_now_playing ? 'btn-selected' : ''} `} onClick={() => this.useNowPlaying()}>Use Artists Related to Now Playing</button>\n              <button className={`btn ${this.state.use_top_artists ? 'btn-selected' : ''} `} onClick={() => this.useTopArtists()}>Use Your Top Artists</button>\n            </div>\n          )}\n\n\n          <br />\n          <br />\n          <br />\n\n          <div className={`${this.state.use_now_playing || this.state.use_top_artists ? 'd-flex align-items-center' : 'd-none'} `}>\n            <div>\n              <button className='btn' onClick={() => this.setState({ root_artists_selected: this.state.root_artists })}>All</button>\n              <button className='btn' onClick={() => this.setState({ root_artists_selected: [] })}>None</button>\n            </div>\n\n            <div>{root_artists}</div>\n\n          </div>\n\n          <br />\n          <br />\n          <br />\n\n          <div className={`${this.state.use_now_playing || this.state.use_top_artists ? 'd-flex align-items-center' : 'd-none'} `}>\n            <h2 className=\"m-2\">Select at least 3 starting bands to continue</h2>\n            <button\n              onClick={() => {\n                if (this.state.root_artists_selected.length >= 3) {\n                  this.setState({ root_artists_selection_complete: true })\n                }\n              }}\n              className={`${this.state.root_artists_selected.length >= 3 ? 'btn' : 'btn-disabled'} ${this.state.root_artists_selection_complete ? 'btn-selected' : ''}`}\n            >Continue Using These Bands</button>\n          </div>\n\n          <br />\n          <br />\n          <br />\n\n          <div className={`location ${this.state.root_artists_selection_complete ? 'd-flex' : 'd-none'}`}>\n            <div className=\"d-flex flex-column justify-content-left\">\n              <div className={` ${\"geolocation\" in navigator ? 'd-flex flex-column' : 'd-none'}`}>\n                <button className=\"btn\" onClick={this.useMyLocation}>Find My Location</button>\n                <p>~or~</p>\n              </div>\n              <div>Please enter your zip code: <input type='text'></input></div>\n            </div>\n\n            <div>{this.state.latitude}, </div><br/> \n            <div>{this.state.longitude}</div>\n\n          </div>\n\n          <br />\n          <br />\n          <br />\n\n          <div className={` ${this.state.root_artists_selection_complete && this.state.latitude !== 0 ? 'd-flex flex-column' : 'd-none'}`}>\n            Let's do the thing\n            <br />\n            <button className=\"btn\" onClick={() => this.findEvents()}>Find Events</button>\n            # of events found: {this.state.events_all.length} <br />\n            # of artist from those events: {this.state.events_artists.length}\n            <br />\n            <button className=\"btn\" onClick={() => this.findArtists()}>Find Artists</button>\n            # of artists found: {this.state.artists_all.length}\n            <br />\n            <button className=\"btn\" onClick={() => this.findMatches()}>Find Matches</button>\n            # of matches found: {this.state.matches.length}\n            <br />\n            <button className=\"btn\" onClick={() => this.makeLimbs()}>Make Limbs</button>\n            # of limbs made: {this.state.limbs.length}\n            <br />\n            <button className=\"btn\" onClick={() => this.makeBranch()}>Make Branch</button>\n            <br />\n          </div>\n          <br />\n          {this.state.limbs.length > 0 && (\n            <div>\n              <header>\n                <form  onSubmit={this.makeBranch} className=\"new-branch-form d-flex flex-row align-items-center justify-content-around\">\n                  <button type='button' icon=\"file\" onClick={() => this.myRef.current.click()} className=\"btn branch-img-preview-btn\">\n                    {this.state.image ? (\n                      <img className=\"branch-img-preview\" src={this.state.preview} alt='branch cover preview' width=\"200\" />\n                    ) : (\n                      <div>\n                        <FontAwesomeIcon icon={faPagelines} className=\"fa-7x\"/>\n                        <br/>\n                        <p>cover image upload</p>\n                      </div>\n                    )}\n                  </button>\n                  <input className=\"d-none\" ref={this.myRef} type='file' name='image' onChange={this.handleImageChange}/>             \n                  <div className=\"text-left\">\n                    <label>Here's your new branch, let's give it a name:</label>\n                    <br/>\n                    <input type=\"text\"/>\n                  </div>\n                  <button className=\"btn\" type=\"submit\" value=\"save\">Add to My Branches</button>\n                </form>\n              </header>\n              {limbs_table}\n            </div>)}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}