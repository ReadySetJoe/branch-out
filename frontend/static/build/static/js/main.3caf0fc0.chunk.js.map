{"version":3,"sources":["Player.js","App.js","serviceWorker.js","index.js"],"names":["Player","props","backgroundStyles","backgroundImage","item","album","images","url","progressBarStyles","width","progress_ms","duration_ms","className","alt","src","name","artists","is_playing","style","axios","defaults","xsrfCookieName","xsrfHeaderName","spotifyApi","SpotifyWebApi","App","state","token","id","root_artists","root_artists_selected","use_now_playing","use_top_artists","root_artists_selection_complete","latitude","longitude","zipcode","use_zipcode","use_latlong","artists_all","events_all","events_artists","events","matches","songs","getNowPlaying","bind","useTopArtists","useNowPlaying","selectArtist","useMyLocation","findEvents","addNowPlayingToList","_token","this","get","then","res","data","extra_data","access_token","setState","setAccessToken","catch","err","console","log","getMyCurrentPlaybackState","error","getArtistRelatedArtists","getArtist","getMyTopArtists","items","formData","FormData","append","href","length","localStorage","setItem","JSON","stringify","method","config","headers","artist","includes","_selected","splice","indexOf","push","e","preventDefault","self","navigator","geolocation","getCurrentPosition","position","coords","error_message","resultsPage","results","event","totalEntries","total_entries","per_page","perPage","Math","ceil","i","num_calls","concat","j","performance","events_artists_unique","Set","map","x","displayName","artists_all_unique","a","key","onClick","something","icon","faSync","type","findArtists","findMatches","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3caf0fc0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Player.css\";\nconst Player = props => {\n  const backgroundStyles = {\n    backgroundImage:`url(${props.item.album.images[0].url})`,\n  };\n  \n  const progressBarStyles = {\n    width: (props.progress_ms * 100 / props.item.duration_ms) + '%'\n  };\n  \n  return (\n    <div className=\"App\">\n      <div className=\"main-wrapper\">\n        <div className=\"now-playing__img\">\n          <img alt=\"This should be the album art for the current playback\" src={props.item.album.images[0].url} />\n        </div>\n        <div className=\"now-playing__side\">\n          <div className=\"now-playing__name\">\n            {props.item.name}\n          </div>\n          <div className=\"now-playing__artist\">\n            {props.item.artists[0].name}\n          </div>\n          <div className=\"now-playing__status\">\n            {props.is_playing ? \"Playing\" : \"Paused\"}\n          </div>\n          <div className=\"progress\">\n            <div\n              className=\"progress__bar\"\n              style={progressBarStyles}\n            />\n          </div>\n        </div>\n        <div className=\"background\" style={backgroundStyles} />{\" \"}\n      </div>\n    </div>\n  );\n}\nexport default Player;","import React from 'react';\nimport axios from 'axios';\nimport * as os from 'os';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\n// import Geocode from 'react-geocode';\n// import Geohash from 'https://cdn.jsdelivr.net/npm/latlon-geohash@2.0.0';\n\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from \"./Player\";\n// import Navigator from \"./Navigator\";\nimport './App.css';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nconst spotifyApi = new SpotifyWebApi();\n\nlet SK_AUTH_KEY = 'io09K9l3ebJxmxe2'\n\n// API Limiter (debug boolean ensuring limited API calling) \nconst API_LIMITER = false;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: null,\n\n      // Now Playing\n      item: {\n        album: {\n          images: [{ url: \"\" }]\n        },\n        name: \"\",\n        artists: [{ name: \"\", id: \"\" }],\n        duration_ms: 0,\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0,\n\n      // Artist Selection\n      root_artists: [],\n      root_artists_selected: [],\n      use_now_playing: false,\n      use_top_artists: false,\n      root_artists_selection_complete: false,\n\n      // Location\n      latitude: 0,\n      longitude: 0,\n      zipcode: 0,\n      use_zipcode: false,\n      use_latlong: false,\n\n      // Limb\n      // Artists\n      artists_all: [],\n      artists: [],\n      // Events\n      events_all: [],\n      events_artists: [],\n      events: [],\n      // Matches\n      matches: [],\n      // Songs\n      songs: [],\n\n    };\n    this.getNowPlaying = this.getNowPlaying.bind(this);\n    this.useTopArtists = this.useTopArtists.bind(this);\n    this.useNowPlaying = this.useNowPlaying.bind(this);\n    this.selectArtist = this.selectArtist.bind(this);\n    this.useMyLocation = this.useMyLocation.bind(this);\n    this.findEvents = this.findEvents.bind(this);\n    this.addNowPlayingToList = this.addNowPlayingToList.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.token) {\n      let _token\n      axios.get(`/api/v1/user-social-auth/`)\n        .then(res => {\n          // console.log(res)\n          // localStorage.setItem('res_token', JSON.stringify(res))\n          _token = res.data[0].extra_data.access_token\n          this.setState({\n            token: _token\n          });\n          spotifyApi.setAccessToken(_token)\n          this.getNowPlaying()\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    }\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState()\n      .then(data => {\n        if (data) {\n          this.setState({\n            item: data.item,\n            is_playing: data.is_playing,\n            progress_ms: data.progress_ms,\n            use_now_playing: false,\n          });\n        }\n        console.log(data)\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          item: {\n            album: {\n              images: [{ url: \"\" }]\n            },\n            name: \"\",\n            artists: [{ name: \"\", id: \"\" }],\n            duration_ms: 0,\n          },\n          is_playing: \"Spotify Not Currently in use\",\n          progress_ms: 0,\n        });\n      })\n  }\n\n  useNowPlaying() {\n    spotifyApi.getArtistRelatedArtists(this.state.item.artists[0].id)\n      .then(data => {\n        this.setState({\n          root_artists: data.artists,\n          use_now_playing: true,\n          use_top_artists: false\n        })\n        console.log(data)\n      })\n      .catch(err => console.log(err))\n    spotifyApi.getArtist(this.state.item.artists[0].id)\n      .then(data => {\n        console.log(data)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  useTopArtists() {\n    spotifyApi.getMyTopArtists()\n      .then(data => {\n        this.setState({\n          root_artists: data.items,\n          use_top_artists: true,\n          use_now_playing: false\n        })\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  addNowPlayingToList() {\n    let formData = new FormData();\n    formData.append('title', this.state.item.name);\n    formData.append('artist', this.state.item.artists[0].name);\n    formData.append('url', this.state.item.href);\n    formData.append('track_number', this.state.songs.length);\n    formData.append('duration_ms', this.state.item.duration_ms);\n    localStorage.setItem('formData', JSON.stringify(formData))\n    localStorage.setItem('state-addnowplaying', JSON.stringify(this.state))\n    console.log(formData)\n\n    axios({\n      method: 'post',\n      url: '/api/v1/songs/',\n      config: { headers: { 'content-type': 'multipart/form-data' } },\n      data: formData,\n    })\n      .then(() => {\n        console.log('Current song added to song list!')\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  selectArtist(artist) {\n    if (!this.state.root_artists_selected.includes(artist)) {\n      let _selected = [...this.state.root_artists_selected]\n      _selected.push(artist)\n      this.setState({ root_artists_selected: _selected })\n    } else {\n      let _selected = [...this.state.root_artists_selected]\n      _selected.splice(_selected.indexOf(artist), 1)\n      this.setState({ root_artists_selected: _selected })\n    }\n  }\n\n  useMyLocation(e) {\n    e.preventDefault()\n    let self = this;\n    navigator.geolocation.getCurrentPosition(\n      function success(position) {\n        console.log('latitude', position.coords.latitude,\n          'longitude', position.coords.longitude);\n\n        self.setState({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n          // geohash: Geohash.encode(position.coords.latitude, position.coords.longitude, 9)\n        })\n      },\n      function error(error_message) {\n        // for when getting location results in an error\n        console.error('An error has occured while retrieving location', error_message)\n      }\n    )\n  }\n\n  // Old Bandsintown code, possibly still useful\n  // getArtistEvents(artist_name) {\n  //   console.log('inside get artist events function')\n  //   axios({\n  //     method: 'get',\n  //     url: \"https://rest.bandsintown.com/artists/\"\n  //       + artist_name.split(' ').join('%20')\n  //       + `/events?app_id=${BIT_AUTH_KEY}`\n  //   })\n  //     .then(res => {\n  //       console.log(res)\n  //     })\n  //     .catch(err => {\n  //       console.log(err)\n  //     })\n  // }\n\n  findEvents() {\n    // console.log('Starting to look for events')\n    // console.log(this.state.root_artists_selected)\n    // const artists = this.state.root_artists_selected\n    // console.log(artists)\n    // var i\n    // for (i=0; i<artists.length; i++) {\n    //   console.log('Looking for events for ' + artists[i].name)\n    //   this.getArtistEvents(artists[i].name)\n    // }\n\n    axios({\n      method: 'get',\n      // url: `https://api.songkick.com/api/3.0/artists/308396/similar_artists.json?apikey=${SOMEGUYS_API_KEY}`,\n      url: `https://api.songkick.com/api/3.0/events.json?apikey=${SK_AUTH_KEY}&location=geo:${this.state.latitude},${this.state.longitude}&page=1`,\n    })\n      .then(res => {\n        console.log(res)\n        this.setState({ events_all: res.data.resultsPage.results.event })\n        if (res.data.resultsPage.totalEntries > res.data.resultsPage.results.event.length & !API_LIMITER) {\n          const total_entries = res.data.resultsPage.totalEntries\n          const per_page = res.data.resultsPage.perPage\n          console.log(`There are ${total_entries} results and ${per_page} on each page`)\n          console.log(`Which means the site needs to make ${Math.ceil(total_entries / per_page)} calls total`)\n          console.log(`and the last call should have ${total_entries % per_page} entries`)\n          const num_calls = Math.ceil(total_entries / per_page)\n          let i\n          for (i = 1; i < num_calls; i++) {\n            axios({\n              method: 'get',\n              // url: `https://api.songkick.com/api/3.0/artists/308396/similar_artists.json?apikey=${SOMEGUYS_API_KEY}`,\n              url: `https://api.songkick.com/api/3.0/events.json?apikey=${SK_AUTH_KEY}&location=geo:${this.state.latitude},${this.state.longitude}&page=${i + 1}`,\n              // eslint-disable-next-line no-loop-func\n            }).then(res => {\n              let events_all = [...this.state.events_all]\n              events_all = events_all.concat(res.data.resultsPage.results.event)\n              this.setState({ events_all: events_all })\n\n              let i;\n              let events_artists = [...this.state.events_artists];\n              for (i = 0; i < this.state.events_all.length; i++) {\n                let e = this.state.events_all[i];\n                let j\n                for (j = 0; j < e.performance.length; j++) {\n                  if (!events_artists.includes(e.performance[j].artist)) {\n                    events_artists.push(e.performance[j].artist)\n                  }\n                }\n              }\n              this.setState({ events_artists: events_artists })\n            })\n              .catch(err => {\n                console.log(err)\n              })\n          }\n        }\n        let i;\n        let events_artists = [...this.state.events_artists];\n        for (i = 0; i < this.state.events_all.length; i++) {\n          let e = this.state.events_all[i];\n          let j\n          for (j = 0; j < e.performance.length; j++) {\n            events_artists.push(e.performance[j].artist)\n          }\n        }\n        this.setState({ events_artists: events_artists })\n        // console.log({events_artists})\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  findArtists() {\n    let i;\n    for (i = 0; i < this.state.root_artists_selected.length; i++) {\n      spotifyApi.getArtistRelatedArtists(this.state.root_artists_selected[i].id)\n        // eslint-disable-next-line no-loop-func\n        .then(res => {\n          let artists_all = [...this.state.artists_all]\n          artists_all = artists_all.concat(res.artists)\n          this.setState({ artists_all: artists_all })\n          console.log(res)\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    }\n  }\n\n  findMatches() {\n    console.log(`There are ${this.state.events_artists.length} artists from events`)\n    let events_artists = [...this.state.events_artists];\n    const events_artists_unique = [...new Set(events_artists.map(x => x.displayName))];\n    console.log(`${events_artists_unique.length} are unique`)\n\n    console.log(`There are ${this.state.artists_all.length} artists from events`)\n    let artists_all = [...this.state.artists_all];\n    const artists_all_unique = [...new Set(artists_all.map(x => x.name))];\n    console.log(`${artists_all_unique.length} are unique`)\n\n    let i, j, a, b, matches = [];\n    for (i = 0; i < artists_all_unique.length; i++) {\n      a = artists_all_unique[i];\n      // console.log(a)\n      for (j = 0; j < events_artists_unique.length; j++) {\n        b = events_artists_unique[j]\n        // console.log(b)\n        if (a === b) {\n          matches.push(a)\n        }\n      }\n    }\n    console.log(`and there are ${matches.length} matches`)\n    console.log(matches)\n    this.setState({ matches: matches })\n  }\n\n  render() {\n    let root_artists = this.state.root_artists.map((artist, id) =>\n      <button key={id}\n        className={`btn root-artist-btn ${this.state.root_artists_selected.includes(artist) ? ('btn-selected') : ('')}`}\n        onClick={() => this.selectArtist(artist)}\n      >\n        {artist.name}\n      </button>\n    )\n\n    let events = this.state.events.map((event, id) =>\n      <div key={id} className=\"btn m-2\">\n        {event.something}\n      </div>\n    )\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <nav className=\"scrollspy-placeholder\"><ul></ul></nav>\n          {this.state.token && (\n            <div className=\"position-fixed fixed-top d-flex flex-row-reverse\">\n              <a href=\"/logout/\" className='logout-btn btn m-3'>Logout</a>\n            </div>\n          )}\n\n          {!this.state.token && (\n            <div>\n              <a\n                className=\"btn btn--loginApp-link\"\n                href=\"/social/login/spotify/\"\n              >\n                Login to Spotify\n            </a>\n              {/* <a\n                className=\"btn btn--loginApp-link\"\n                href={`${authEndpoint}?client_id=${SPOTIFY_AUTH_KEY}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}\n              >\n                Login to Spotify (Implicit Grant)\n            </a> */}\n            </div>\n          )}\n          {this.state.token && (\n            <div>\n              <div className='player-wrapper'>\n\n                {this.state.item.album.images[0].url ? (\n                <Player\n                  item={this.state.item}\n                  is_playing={this.state.is_playing}\n                  progress_ms={this.state.progress_ms}\n                />\n                ) : (\n                  <div>\n                    <div>Let's get started.</div>\n                    <div>To make sure your Spotify is connected, play a song (on your phone, or any device) and hit the resync button to make sure you're connected</div>\n                  </div>\n                )}\n                <button className='btn p-1 refresh-btn' onClick={() => this.getNowPlaying()}><span className=\"p-1\"><FontAwesomeIcon icon={faSync} /></span></button>\n\n              </div>\n              <br />\n              <br />\n              <br />\n              <button className={`btn ${this.state.use_now_playing ? 'btn-selected' : ''} `} onClick={() => this.useNowPlaying()}>Use Artists Related to Now Playing</button>\n              <button className={`btn ${this.state.use_top_artists ? 'btn-selected' : ''} `} onClick={() => this.useTopArtists()}>Use Your Top Artists</button>\n            </div>\n          )}\n\n\n          <br />\n          <br />\n          <br />\n\n          <div className={`${this.state.use_now_playing || this.state.use_top_artists ? 'd-flex align-items-center' : 'd-none'} `}>\n            <div>\n              <button className='btn' onClick={() => this.setState({ root_artists_selected: this.state.root_artists })}>All</button>\n              <button className='btn' onClick={() => this.setState({ root_artists_selected: [] })}>None</button>\n            </div>\n\n            <div>{root_artists}</div>\n\n          </div>\n\n          <br />\n          <br />\n          <br />\n\n          <div className={`${this.state.use_now_playing || this.state.use_top_artists ? 'd-flex align-items-center' : 'd-none'} `}>\n            <h2 className=\"m-2\">Select at least 3 starting bands to continue</h2>\n            <button\n              onClick={() => {\n                if (this.state.root_artists_selected.length >= 3) {\n                  this.setState({ root_artists_selection_complete: true })\n                }\n              }}\n              className={`${this.state.root_artists_selected.length >= 3 ? 'btn' : 'btn-disabled'} ${this.state.root_artists_selection_complete ? 'btn-selected' : ''}`}\n            >Continue Using These Bands</button>\n          </div>\n\n          <br />\n          <br />\n          <br />\n\n          <div className={`location ${this.state.root_artists_selection_complete ? 'd-flex' : 'd-none'}`}>\n            {/* <div className={`location ${this.state.root_artists_selection_complete ? 'd-flex' : ''}`}> */}\n            <div className=\"d-flex flex-column justify-content-left\">\n              <div className={` ${\"geolocation\" in navigator ? 'd-flex flex-column' : 'd-none'}`}>\n                <button className=\"btn\" onClick={this.useMyLocation}>Find My Location</button>\n                <p>~or~</p>\n              </div>\n              <div>Please enter your zip code: <input type='text'></input></div>\n            </div>\n\n            <div>{this.state.latitude}, {this.state.longitude}</div>\n\n          </div>\n\n          <br />\n          <br />\n          <br />\n\n          <div className={` ${this.state.root_artists_selection_complete && this.state.latitude !== 0 ? 'd-flex flex-column' : 'd-none'}`}>\n            Let's do the thing\n            <br />\n            <button className=\"btn\" onClick={() => this.findEvents()}>Find Events</button>\n            # of events found: {this.state.events_all.length} <br />\n            # of artist from those events: {this.state.events_artists.length}\n            <button className=\"btn\" onClick={() => this.findArtists()}>Find Artists</button>\n            <br />\n            # of artists found: {this.state.artists_all.length}\n            <br />\n            <button className=\"btn\" onClick={() => this.findMatches()}>Find Matches</button>\n            # of matches found: {this.state.matches.length}\n\n          </div>\n\n\n\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}